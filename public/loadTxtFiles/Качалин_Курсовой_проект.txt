Иркутск 2022 г. 

2 

Словарь терминов и сокращений 

Термин 

автоматизация 

конфигурирование 

конфигурация  
мониторинг 
сетевое устройство 

компьютерная 
сеть, 
сетевая инфраструктура 
документирование 
ПО 

CLI 

SSH 
протокол 

ОС 
IP 

IP-адрес 
IP-пространство 
подсеть 
автоматизация 

VLAN 

инициализация 
устройства 

полигон  (полигон  для 
тестирования) 
playbook 

ЭВМ 

администрирование  
безопасность 
информации 
конфиденциальность 

и 

между 

данных 

передачу 

программ 

обеспечивающая 

Значение 
освобождение  или  уменьшение  участия  человека  в  каком-либо 
процессе. 
настройка  или  корректировка  параметров  конфигурации 
устройства. 
набор программного и аппаратного обеспечения устройства. 
наблюдение за процессами. 
устройства,  обеспечивающие  связь  и  взаимодействие  между 
устройствами в компьютерной сети. 
система, 
вычислительными устройствами. 
процесс закрепления информации на материальном носителе. 
Программное 
обеспечение.  Совокупность 
документации для использования устройства в решении задач. 
Command-line  interface.  Способ  взаимодействия  человека  с 
устройством путем отправки команд в виде последовательности 
символов. 
Secure Shell. Протокол удаленного управления ОС устройства. 
«язык», используемый компьютерами для  обмена данными при 
работе в сети. 
операционная система. ПО, управляющее устройством. 
Internet  Protocol.  Набор правил, регулирующий формат  данных, 
передаваемых через глобальную или локальную сеть. 
уникальный идентификатор устройства в сети. 
совокупность IP-адресов определенной сети. 
логическое разделение IP-пространства.  
освобождение  или  уменьшение  участия  человека  в  каком-либо 
процессе. 
Виртуальная локальная компьютерная сеть. Представляет собой 
группу  хостов  с  общим  набором  требований,  которые 
взаимодействуют  так,  как  если  бы  они  были  подключены  к 
широковещательному  домену  независимо  от  их  физического 
местонахождения. 
создание,  активация,  подготовка  к  работе,  определение 
параметров. Приведение программы или устройства в состояние 
готовности к использованию. 
Виртуальная  сеть  или  часть  сети,  на  которой  проводится 
тестирование конфигураций устройств. 
специальные программы Ansible, которые позволяют объявлять 
конфигурацию  устройств,  управлять  порядок  любой  ручной 
установки  в  определенном  порядке  на  нескольких  группах 
устройств. 
Комплекс 
электронное 
средств, 
технических, 
предназначенных  для  автоматической  обработки  информации, 
вычислений, автоматического управления. 
управление, руководство, распоряжение, менеджмент. 
такое  состояние  защищенности  информации,  при  котором 
обеспечены её конфиденциальность, целостность и доступность. 
необходимость предотвращения разглашения, утечки какой-либо 
информации. 

вычислительное 
и 
аппаратных 

устройство. 
программных 

3 

Термин 

целостность 

доступность 

информационная 
безопасность 

сервер 

сервис 

эксплуатация  

БП 

или 

Значение 
данные не были изменены при выполнении любой операции над 
ними, будь то передача, хранение или представление. 
состояние информации, при котором субъекты, имеющие права 
доступа, могут реализовывать их беспрепятственно. 
Практика  предотвращения  несанкционированного  доступа, 
использования, раскрытия, искажения, изменения, исследования, 
записи или уничтожения информации. 
выделенный 
выполнения сервисного программного обеспечения. 
процесс,  который  обычно  предоставляет  услуги  по  сети  и 
выполняется на сервере 
исполнение  программ  на  ЭВМ  для  обработки  информации  и 
получения результатов, являющихся целью создания ПО, а также 
в обеспечении достоверности и надежности выдаваемых данных. 
Бизнес-процесс  –  это  логическая  последовательность  действий 
человека (или нескольких человек) в коллективе. Цель описания 
бизнес-процесса  –  анализ  и  регламентация  тех  или  иных 
действий в коллективе. 

специализированный 

компьютер 

для 

4 

 
Содержание 
Введение ....................................................................................................................... 6 

1  Анализ  предметной  области  и  обоснование  необходимости  разработки 
системы ......................................................................................................................... 8 

1.1 Моделирование процессов конфигурирования и документирования сетевых 
устройств в компании EN+ DIGITAL ............................................................... 8 

1.2 Назначение и цели создания системы ............................................................. 26 
1.3 Требования к системе ....................................................................................... 26 

1.4  Обзор  систем  автоматизации  конфигурирования  и  документирования 
сетевой инфраструктуры .................................................................................. 32 

1.5 Описание выбранных средств реализации системы ..................................... 36 

2 Проектирование системы ...................................................................................... 39 

2.1  Моделирование  процессов  работы  с  сетевыми  устройствами  с  учетом 
внедрения системы ............................................................................................ 39 

2.2 Варианты использования системы .................................................................. 57 

2.3 Разработка программ автоматизации .............................................................. 65 
2.4 Архитектура системы ....................................................................................... 70 

2.5 Развертывание системы .................................................................................... 72 

3 Реализация ............................................................................................................... 74 

3.1 Состав и содержание работ по созданию системы ........................................ 74 

3.2 Фактически выполненные работы и полученные результаты ..................... 76 

3.3 Примеры наработки системы ........................................................................... 77 
3.4 Анализ выполненной работы и дальнейшие планы ...................................... 82 

Заключение ................................................................................................................ 83 

Список использованных источников ...................................................................... 84 

5 

 
Введение 

С давних времен задача по передачи информации из одной точки в другую 
была востребована. С развитием информационных и компьютерных технологий 
этот  факт  не  изменился.  Но  изменились  и  скорость,  и  объемы  передаваемых 
данных. Ещё в 2000 году средняя скорость передачи данных составляла от 32 до 
128 Кбит/с. Чтобы скачать файл размером 1 Гбайт, было необходимо больше 18 
часов. Сегодняшняя скорость позволяет в течение 10 минут скачивать подобные 
объемы информации [1]. 

Вместе  с  развитием  технологий  передачи  данных,  развивался  и 
инструментарий  сетевого  инженера  для  управления  компьютерными  сетями. 
Было разработано множество различного ПО для мониторинга сетей и сетевых 
устройств, инвентаризации и сбора данных: Zabbix, NetFlow Analyzer, WhatsUp 
Gold, NetBox и другие. Но инструментарий для автоматизации сети практически 
не  развивался.  На  протяжении  многих  лет  сетевые  инженеры  используют 
самописные скрипты и заготовленные заранее конфигурации, чтобы настраивать 
сетевые устройства. И только в последние несколько лет начали появляться ПО 
для автоматизации рутинных задач при работе с сетевыми устройствами [2]. 

отдела 

планирует 

Компания  EN+  DIGITAL 

занимается  предоставлением 

IT-услуг 
компаниям партнерам. Среди которых и обслуживание сетевого оборудования. 
Сотрудники сетевого отдела ежедневно обслуживают более 2000 устройств. И 
хоть  на  данный  момент  сотрудники  справляются  со  своими  задачами, 
руководство 
автоматизации 
конфигурирования  и  документирования  сетевых  устройств.  Несмотря  на 
довольно  высокую  стоимость  лицензии,  основная  проблема  покупки 
специализированного ПО заключается не в цене, а в том, что не известно какой 
результат  повлечет  внедрение  такой  системы.  К  тому  же  для  использования 
системы требуется квалифицированный сотрудник, что также  занимает время. 
Поэтому  было  решено  создать  прототип  на  основе  бесплатного  ПО,  чтобы 
понять необходимость внедрения автоматизации в бизнес-процессы при работе 
с сетевым оборудованием 

внедрение 

системы 

Цель  создания  данной  системы  –  уменьшить  время,  проводимое 
сотрудником сетевого отдела ООО "ЭН+ ДИДЖИТАЛ" на решение рутинных 
задач,  связанных  с  обслуживанием  сетевых  устройств  за  счет  введения 
автоматизированной  системы  конфигурирования  и  документирования  сетевых 
устройств в корпоративной вычислительной информационный сети. 

Идея  создания  подобной  системы  появилась  во  время  прохождения 
производственной  практики.  При  анализе  бизнес-процессов  сетевого  отдела 
компании было выявлено, что специалисты отдела вручную проводят настройку 
сетевого оборудования (при помощи заранее заготовленных конфигураций). Это 
не  только  расходует  время  работы  сотрудника  на  рутинные  задачи,  но  также 
имеет  влияние  со  стороны  человеческого  фактора,  которое  может  привести  к 
неполадкам  в  работе  сети.  А  это  в  свою  очередь  к  неполадкам  в  работе  все 
компании и её партнеров.  

6 

Результат  работы,  т.е.  систему  автоматизации,  стоит  рассматривать  как 
прототип системы для автоматизации рутинных задач, выполняемых в сетевом 
отделе при работе с сетевым оборудованием. Данная система создается в рамках: 
‒ курсового  проекта  по  дисциплине  «Проектирование  информационных 

систем»; 

‒ проектного обучения Ирниту; 
‒ проекта программы IT-academy совместно с EN+ Group и Русал. 
После  внедрения  и  эксплуатации  будет  решено  стоит  ли  развивать 
функциональность данного прототипа и доводить его до полноценной системы 
или  отказаться  от  него.  Также  возможен  вариант  приобретения  лицензий 
готового ПО, решающих задачи работы с сетевым оборудованием. 

7 

 
 
1 Анализ  предметной  области  и  обоснование  необходимости 

разработки системы 

В данном разделе приводится анализ предметной области, т.е. обоснование 
причин создания прототипа системы автоматизации задач конфигурирования и 
документирование сетевого оборудования в компании EN+ DIGITAL. 

1.1 Моделирование 

процессов 

конфигурирования 

и 

документирования сетевых устройств в компании EN+ DIGITAL 

На  сегодняшний  день  в  компании  EN+  DIGITAL  обслуживается  более 
2.000 
сетевых  устройств.  Задачами  мониторинга,  конфигурирования, 
программным  и  аппаратным  обслуживанием  занимается  отдел  «По  адаптации 
сетевой  инфраструктуры  для  программ  ЭВМ,  баз  данных».  В  отделе  работает 
около 30 сетевых инженеров. 

На 

задач 

отдела 

момент 

данный 

большинство 

являются 
неавтоматизированными. Для решения часто возникающих рутинных задач по 
настройке  оборудования,  в  большинстве  случаев  используется  готовая 
конфигурация  (или её шаблон), которую сотрудник  корректирует для  каждого 
устройства  индивидуально.  И  только  потом  подключается  к  устройству  через 
telnet  или  ssh  вставляет  конфигурацию.  Такое  решение  задач  крайне 
неэффективно  расходует  время  сотрудника  и  к  тому  же  связано  с  риском 
возникновения неисправностей в работе устройства или даже в части сети (ввиду 
человеческого фактора). Также присутствует и другой вариант решения малого 
числа задач – ранее написанные скрипты. Это частичная автоматизация, которая 
во многом схожа с проблемами ручной настройки по шаблонам. Скрипт нужно 
корректировать, чтобы он корректно отработал с различными устройствами. Это 
может также вызвать неполадки в работе сетевого оборудования при совершении 
ошибки в исправлении скрипта.  

Помимо  конфигурации,  стоит проблема  и  с  документированием  сетевых 
устройств. На сегодняшний день в компании ведется excel файл инвентаризации, 
который  храниться  в  общей  папке.  Это  затрудняет  работу  по  анализу 
информации: не известно какая информация актуальная, а какая – нет. Процесс 
ввода  новый  информации  или  обновление  устаревшей  также  является 
затруднительным и связан с человеческим фактором.  

Помимо  инвентаризации  введется  документирование  сети  при  помощи 
схем  Visio,  Zabbix  и  WhatsUp  Gold.  Создание  и  обновление  схем  связанно  с 
процессом сбора информации с устройств. Сбор информации осуществляется в 
ручном  режиме:  специалист  заходит  в  файл  инвентаризации,  фильтрует  по 
интересующей его части сети, перебором заходит на устройства, собирает с них 
необходимую  информации, 
только  потом  начинает 
анализирует  и 
документировать. Процесс очень рутинный и занимает много времени. Так как в 
файле  инвентаризации  не  всегда  актуальная  информация,  это  приводит  к 
неточностям или ошибкам в построении схем. 

Чтобы детальней изучить проблему стоит смоделировать бизнес-процессы, 
связанные с выполнением задач конфигурирования и документирования сетевых 
устройств на данный момент в компании.  

8 

Моделирование бизнес-процессов компании было выполнено при помощи 
методологии  IDEF0  [3].  Модель  AS-IS  позволяет  наглядно  представить 
существующие  бизнес-процессы  в  компании.  Данную  модель  можно 
использовать  для  анализа  слабых  мест  в  процессах  или  мест  возможной 
оптимизации. 

Для  более  компактного  представление  бизнес-процессов  использовалось 
туннелирование стрелок диаграмм. Туннели позволяют указать, где детализация 
определенной  сущности  на  диаграмме  является  избыточной.  В  таблице  1.1 
приводится описание всех туннелей при моделировании бизнес-процессов AS-
IS. 

Таблица 1.1 – Описание туннелей для модели процессов AS-IS. 
Сущность 

Описание применения туннеля 

На каких 
уровнях 
диаграммы 
встречается 
Все 

Сотрудник 
EN+ DIGITAL 

отдела 

Регламент 
документирования 
устройства 

Регламент 
конфигурирования 
устройства 

А0 
А2 

А21 
А22 

А221 
А222 
А223 

А1 

А12 

Текстовый редактор  А1 

А12 

Так  как  сотрудник  участвует  во  всех  процессах 
нижних  уровней,  то  его  появление  обозначается 
туннелем.  Это  означает,  что  в  диаграммах  нижнего 
уровня  он  не  обозначается,  но  подразумевается  его 
присутствие  во  всех  блоках  в  виде  исполняющего 
бизнес-процессы 
Используется  в  качестве  нормативного  документа 
устройств. 
для 
Обозначается 
процесса 
«Документирование  устройства».  Не  отображается 
на нижнем уровне процесса, но подразумевается его 
использование. 

документирования 

сетевых 
для 

туннелем 

сетевых 

конфигурирования 

Используется  в  качестве  нормативного  документа 
для 
устройств. 
Обозначается  туннелем  для  процесса  «Написание 
конфигурации». Не отображается на нижних уровнях 
процесса, но подразумевается его использование. 
Используется  как  инструмент  для  написания 
конфигурации. Обозначается туннелем для процесса 
«Написание  конфигурации».  Не  отображается  на 
нижнем  уровне  процесса,  но  подразумевается  его 
использование. 

9 

 
Продолжение таблицы 1.1 
Сущность 

На каких 
уровнях 
диаграммы 
встречается 
А22 

А221 

А22 

А222 

Zabbix. 

WhatUp Gold 

NetFlow Analyzer 

А22 

А223 

Excel 

А2 

А21 

Описание применения туннеля 

Используется как инструмент для документирования 
сети. Обозначается туннелем для процесса «Работа с 
Zabbix».  Не  отображается  на  нижнем  уровне 
процесса, но подразумевается использование его. 
Используется как инструмент для документирования 
сети. Обозначается туннелем для процесса «Работа с 
WhatUp  Gold».  Не  отображается  на  нижнем  уровне 
процессов, но подразумевается использование его. 
Используется как инструмент для документирования 
сети. Обозначается туннелем для процесса «Работа с 
NetFlow  Analyzer».  Не  отображается  на  нижнем 
его 
но 
уровне 
использование. 
Используется  как  инструмент  для  инвентаризации 
сети.  Обозначается 
процесса 
Не 
файла 
«Изменение 
отображается  на  нижнем  уровне  процесса,  но 
подразумевается  его  использование  в  качестве 
инструмента. 

инвентаризации». 

подразумевается 

процессов, 

туннелем 

для 

Далее  приводится  детальное  описание  основных  бизнес-процессов, 

связанных с обслуживанием сетевого оборудования в компании. 

1.1.1 Работа с сетевым устройством (А-0) 
На  рисунке  1.1  представлена  диаграмма  IDEF0,  описывающая  верхний 
уровень  бизнес-процесса  «Работа  с  сетевым  устройством»  (А-0)  на  данный 
момент в компании. 

10 

 
 
 
Рисунок 1.1 – Диаграмма IDEF0 AS-IS для бизнес-процесса «Работа с сетевым 
устройством» верхнего уровня. 

На  данный  момент  для  работы  с  сетевым  оборудованием  сотрудник 
сетевого отдела EN+ DIGITAL использует инструментарий сетевого инженера, 
чтобы настраивать и документировать устройства.  

Чтобы работать с сетевым устройством ему требуются: 
‒ задачи устройства. Какие функции оно должно выполнять; 
‒ устройство, обслуживание которого проводится; 
‒ IP-план сети, в которой устройство должно находится; 
‒ файл  инвентаризации.  Файл  в  формате  excel,  который  хранит  всю 

инвентарную информацию о сетевых устройствах; 

‒ базовый  шаблон  конфигурации.  Текстовый  файл,  в  котором  храниться 

универсальная для большинства часть конфигурации устройства.  

Работа  с  устройством  выполняется  согласно  регламентам  компании  и 

сетевого отдела по работе с сетевым оборудованием. 

В результате процесса ожидаются следующие результаты: 
‒ устройство с отлаженной конфигурацией; 
‒ файл  инвентаризации,  в  котором  добавилась  или  обновилась 

информация об устройстве; 

‒ информация в ПО для мониторинга сетевого оборудования, которое уже 

работает в отделе. 

11 

 
 
1.1.2 Работа с сетевым устройством (А0) 
На  рисунке  1.2  представлена  диаграмма  IDEF0  AS-IS,  детализирующая 
описание  бизнес-процесса  «Работа  с  сетевым  устройством»  (А0)  на  данный 
момент в компании. 

Рисунок 1.2 – Диаграмма IDEF0 AS-IS для бизнес-процесса «Работа с сетевым 
устройством» нижнего уровня. 

Два  основных  бизнес-процесса,  посвященных  работе  с  сетевыми 

устройствами – это конфигурирование и документирование.  

Конфигурирование 
На данный момент устройство конфигурируется, если оно:  
‒ не сконфигурировано (новое устройство или со склада); 
‒ вызывает неполадки в работе сети; 
‒ имеет  несоответствующую  функциональность 

(добавление  или 

уменьшение функциональности). 

Конфигурирование  –  процесс  нечастый,  но  требует  много  времени  на 

подготовку и исполнение.  

12 

 
 
 
 
 
Документирование 
Документирование  –  крайне  хаотичный  процесс  из-за  влияния 
человеческого  фактора.  Часты  случаи,  когда  устройство  заменили  новым  или 
сменили на нем конфигурацию, но изменения нигде обозначены не были. Такие 
случаи  выявлялись  только  при  полной  инвентаризации  части  сети,  во  время 
прохождения  производственной  практики.  Поэтому  в  файле  инвентаризации 
могут  как  отсутствовать  записи  о  новых  устройствах,  так  и  записи,  где 
информация уже неактуальна.  

Из-за  такой  хаотичной  документации  страдает  и  ПО  для  мониторинга 
сетевого  оборудования,  так  как,  чтобы  занести  в  него  какую-либо  часть  сети 
необходимо  связываться  с  человеком,  работающем  на  объекте  и  запрашивать 
актуальную  информацию.  Информацию,  которую  сотруднику  ещё  будет 
необходимо собрать. 

Также  хаотичная  документация  может  замедлять  время  решения 

некоторых проблем, возникших в работе сети 

1.1.3 Конфигурирование сетевого устройства (А1) 
На  рисунке  1.3  представлена  диаграмма  IDEF0  AS-IS,  детализирующая 
описание  бизнес-процесса  «Конфигурирование  сетевого  устройства»  (А1)  на 
данный момент в компании. 

Рисунок 1.3 – Диаграмма IDEF0 AS-IS для бизнес-процесса 
«Конфигурирование сетевого устройства».  

13 

 
 
 
 
Чтобы корректно сконфигурировать устройство, сотруднику нужно иметь: 
‒ задачи, которые устройство должно выполнять; 
‒ IP-план, где (в какой подсети) устройство должно находиться; 
‒ устройство, которое необходимо сконфигурировать; 
‒ базовый  шаблон  конфигурации.  Текстовый  файл,  в  котором  храниться 

универсальная для большинства устройств часть конфигурации. 

При 

конфигурировании 

устройства 

сотрудник, 

регламентом 
установлены в компании. 

конфигурирования  и 

тестирования 

руководствуясь 
которые 

устройств, 

При  помощи  инструментария  сетевого  инженера  выполняются  все 

операции. 

По окончанию бизнес-процесса должен получить устройство с отлаженной 

конфигурацией. 

При  конфигурировании  сетевого  устройства  в  компании  установлена 

следующая последовательность бизнес-процессов: 

1 этап – Анализ (А11) 
Сетевой  инженер  при  помощи  текстового  редактора 

(один  из 

инструментов сетевого инженера): 

‒ анализирует  задачи  устройства,  IP-план  и  неправильную  работу 
устройства  (если  устройство  уже  сконфигурировано,  но  не  прошло  процесс 
отладки); 

‒ должен детализировать список задач устройства; 
‒ выявить  неправильную  конфигурацию  (если  устройство  не  прошло 

отладку). 

Анализ  совершается  в  соответствии  с  регламентом  конфигурирования 

устройства (один из регламентов работы с сетевыми устройствами). 

2 этап – Написание конфигурации (А12) 
Чтобы  написать  конфигурацию,  сетевому  инженеру  необходимо  иметь: 
базовый  шаблон  конфигурации,  детализированный  список  задач,  IP-план  и 
неправильную конфигурацию (если устройство не прошло отладку).  

Написание  конфигурации  совершается  в  соответствии  с  регламентом 
конфигурирования  устройства  (один  из  регламентов  работы  с  сетевыми 
устройствами) в текстовом редакторе.  

В результате должна получиться конфигурация устройства. 
3 этап – Развертывание конфигурации (А13) 
Получив  конфигурацию  и  устройство,  сотрудник  может  начать  процесс 

конфигурирования устройства.  

Для  удаленного  подключения  к  устройству  необходимо  ПО  Putty  и 

текстовый редактор для использования написанной конфигурации.  

Процесс  совершается  согласно  регламенту  конфигурирования  устройств 

(один из регламентов работы с сетевыми устройствами).  

В результате устройство должно быть сконфигурировано. 

14 

 
 
4 этап – Отладить работу устройства (А14) 
Сконфигурированное  устройство  нужно  отладить  в  соответствии  с 
регламентом тестирования устройств (один из регламентов работы с сетевыми 
устройствами).  

Если устройство прошло отладку оно переходит к следующему процессу.  
Если устройство не прошло отладку, то сотруднику требуется разобраться 
в  проблеме,  т.е.  перейти  к  анализу  ситуации  вновь,  но  уже  для  анализа 
неправильной работы устройства. 

1.1.4 Анализ (А11) 
На  рисунке  1.4  представлена  диаграмма  IDEF0  AS-IS,  детализирующая 

описание бизнес-процесса «Анализ» (А11) на данный момент в компании. 

Рисунок 1.4 – Диаграмма IDEF0 AS-IS для бизнес-процесса «Анализ».  

Под  анализом  подразумевается  либо  анализ,  выявляющий  почему 

устройство работает неправильно, либо анализ задач устройства. 

15 

 
 
 
 
 
 
1.1.5 Анализ неправильной работы устройства (А111) 
На  рисунке  1.5  представлена  диаграмма  IDEF0  AS-IS,  детализирующая 
описание бизнес-процесса «Анализ неправильной работы устройства» (А111) на 
данный момент в компании. 

Рисунок 1.5 – Диаграмма IDEF0 AS-IS для бизнес-процесса «Анализ 
неправильной работы устройства». 

Данный  процесс  возникает,  когда  в  работе  устройства  была  обнаружена 

ошибки или устройство не полной мере выполняет свои задачи.  

Сотрудник  должен  по  регламенту  тестирования  устройств  выявить 

причину различия между требуемой и текущей функциональностью.  

Помимо  задач  нужно  учитывать  и  IP-план,  т.к.  ошибка  в  адресах  часто 

вызывает некорректную работу устройства.  

Причину  различия,  неправильную  конфигурацию  следует  отправить  в 

следующий процесс (исправление конфигурации).  

16 

 
 
 
 
 
1.1.6 Анализ задач устройства (А112) 
На  рисунке  1.6  представлена  диаграмма  IDEF0  AS-IS,  детализирующая 
описание бизнес-процесса «Анализ задач устройства» (А112) на данный момент 
в компании. 

Рисунок 1.6 – Диаграмма IDEF0 AS-IS для бизнес-процесса «Анализ задач 
устройства». 

Бизнес-процесс  возникает  при  первой  конфигурации  устройства,  т.е.  с 

нуля, или когда следует значительно изменить функциональность устройства.  
регламенту 

конфигурирования, 

Сотрудник 

согласно 

должен 

проанализировать список задач.  

После 

этого,  детализировать  каждую 

задачу,  чтобы  упростить 

последующую конфигурацию.  

Далее, нужно определить переменные исходя из детализированных задач 

и IP-плана.  

По  итогу  должен  получиться  детализированный  список  задач  с 

переменными.  

17 

 
 
 
 
 
1.1.7 Написание конфигурации (А12) 
На  рисунке  1.7  представлена  диаграмма  IDEF0  AS-IS,  детализирующая 
описание бизнес-процесса «Написание конфигурации» (А12) на данный момент 
в компании. 

Рисунок 1.7 – Диаграмма IDEF0 AS-IS для бизнес-процесса «Написание 
конфигурации». 

Бизнес-процесс  «Написание  конфигурации»  можно  разделить  на  две 
основных  задачи:  написание  новой  конфигурации  и  изменение  имеющейся 
конфигурации. В написание новой конфигурации входят процессы «Написание 
базовой конфигурации на основе шаблона» и «Дописывание конфигурации под 
задачи  устройства».  В  изменение  имеющейся  конфигурации  –  процесс 
«Исправление конфигурации». 

18 

 
 
 
 
 
 
1.1.7.1 Написание базовой конфигурации на основе шаблона (А121) 
В первую очередь, сотруднику требуется написать базовую конфигурацию, 
используя базовой шаблон конфигурации, детализированный список задач и IP-
план.  

Процесс выполняется согласно регламенту конфигурирования.  
Процесс выполняется в текстовом редакторе.  
По итогу должна получиться базовая конфигурация устройства. 
1.1.7.2 Исправление конфигурации (А122) 
Когда  сотрудник  выявил  неправильную  конфигурацию  устройства,  её 

необходимо исправить.  

Для этого требуется обратиться к списку задач и IP-плану.  
Процесс  выполняется  в  текстовом  редакторе  и  согласно  регламенту 

конфигурирования. В итоге должна получится исправленная конфигурация. 
1.1.7.3 Дописывание конфигурации под задачи устройства (А123) 
Далее требуется дописать базовую конфигурацию до полной.  
Для  этого  сотруднику  необходимы  детализированный  список  задач,  IP-

план и базовая конфигурация, написанная ранее.  

Процесс выполняется, согласно регламенту конфигурирования.  
Процесс выполняется в текстовом редакторе.  
По итогу должна получиться полная конфигурация устройства. 
Полная  конфигурация  устройства  и  исправленная  конфигурация  для 

дальнейших процессов обобщается в «Конфигурация». 

1.1.8 Развертывание конфигурации (А13) 
На  рисунке  1.8  представлена  диаграмма  IDEF0  AS-IS,  детализирующая 
описание  бизнес-процесса  «Развертывание  конфигурации»  (А13)  на  данный 
момент в компании. 

19 

 
 
Рисунок 1.8 – Диаграмма IDEF0 AS-IS для бизнес-процесса «Развертывание 
конфигурации». 

Под  развертыванием  конфигурации  подразумевается  перенос  ранее 

подготовленной конфигурации в текстовом файле на само устройство.  

Для  этого  сотруднику  требуется  сначала  подключиться  к  устройству. 
Данная операция выполняется обычно в ПО Putty или в его аналогах. Порядок 
действий регулирует регламент конфигурирования.  

Когда доступ к устройству будет получен начинается ввод конфигурации, 
написанной  ранее.  Обычно  её  сохраняют  во  временном  текстовом  файле, 
поэтому  необходимо  использование  текстового  редактора  или  программ  для 
чтения текстовых файлов.  

Когда  конфигурация  будет  полностью  перенесена  на  устройство, 
сотрудник  должен  вручную  проверить  всю  конфигурацию  и  убедиться  в  её 
корректности.  

Если он выявляет ошибку, то начинает её исправлять, т.е. вводить часть 

конфигурации заново.  

Устройство,  в  конфигурации  которого  не  было  обнаружено  ошибок 

отправляется в следующий процесс «Отладка работы устройства». 

20 

 
 
 
 
1.1.9 Документирование сетевого устройства (А2) 
На  рисунке  1.9  представлена  диаграмма  IDEF0  AS-IS,  детализирующая 
описание  бизнес-процесса  «Документирование  устройства»  (А2)  на  данный 
момент в компании. 

Рисунок 1.9 – Диаграмма IDEF0 AS-IS для бизнес-процесса «Документация 
устройства».  

Чтобы задокументировать устройства сотруднику нужно иметь: 
‒ устройство с отлаженной документацией; 
‒ файл инвентаризации сетевого оборудования. 
Документирование устройства совершается в соответствии с регламентом 

документирования устройств.  

Для выполнения операции сотрудник использует инструментарий сетевого 

инженера. 

По окончанию бизнес-процесса должны быть получены: 
‒ файл инвентаризации с обновленной информацией; 
‒ информацию  об  устройстве  в  различном  ПО  для  мониторинга  работы 

сетевого оборудования. 

21 

 
 
 
 
 
Документирование устройства состоит из трех этапов: 
1.  Внесение информации об устройстве в файл инвентаризации; 
2.  Внесение  информации  об  устройстве  в  ПО  для  мониторинга  работы 

сетевых устройств; 

3.  Проверка внесенной информации на корректность. 

1.1.10 Изменение файла инвентаризации (А21) 
На  рисунке  1.10  представлена  диаграмма  IDEF0  AS-IS,  детализирующая 
описание бизнес-процесса «Изменение файла инвентаризации» (А21) на данный 
момент в компании. 

Рисунок 1.10 – Диаграмма IDEF0 AS-IS для бизнес-процесса «Изменение файла 
инвентаризации».  

Согласно регламенту документирования устройств, сотруднику требуется 

внести в файл инвентаризации информацию.  

Информация берется с устройства, которое ранее было сконфигурировано.  
В файле храниться информация в табличном виде, поэтому для работы с 

ней требуется использование ПО Microsoft Excel.  

Файл  нужно  открыть  и  найти  в  нем  строку,  в  которую  вносится 
информация. В строке внести изменения. Файл сохранить. В итоге обновлённый 
файл инвентаризации используется в следующих процессах.  

22 

 
 
 
 
 
 
1.1.11 Изменение  данных  в  ПО  для  мониторинга  работы  сетевых 

устройств (А22) 

На  рисунке  1.11  представлена  диаграмма  IDEF0  AS-IS,  детализирующая 
описание  бизнес-процесса  «Изменение  данных  в  ПО  для  мониторинга  работы 
сетевых устройств» (А22) на данный момент в компании. 

Рисунок 1.11 – Диаграмма IDEF0 AS-IS для бизнес-процесса «Изменение 
данных в ПО мониторинга сетевых устройств».  

Согласно  регламенту  документирования  сотрудникам  нужно  обеспечить 
мониторинг  важного  для  сетевой  инфраструктуры  оборудования.  Для  этого 
используется специальное ПО для мониторинга.  

На данный момент в сетевом отделе используется три ПО для мониторинга 

сетевых устройств:  

‒ Zabbix – для мониторинга нагрузки на каналы связи и документирование 

сети в виде схем [4]; 

‒ WhatsUp  Gold  –  для  мониторинга 

состояния  устройства  и 

документирования сети [5]; 

‒ NetFlow Analyzer – для мониторинга трафика в сети [6]. 
Эти  ПО  работает  в  WEB  приложениях  и  принцип  работы  с  ними  схож: 
чтобы  внести  устройство  в  ПО,  нужно  создать  форму  устройства,  открыть  её, 
заполнить информацией и сохранить.  

23 

 
 
 
Если  требуется  изменить  информацию  или  исправить  ошибку  в 
найти 
не 

достаточно 

требуется, 

заново 

документировании  форму 
соответствующую оборудованию.  

В итоге информация об устройстве должна храниться в ПО мониторинга 

сетевого оборудования.  

С бизнес-процессами при работе с различным ПО можно ознакомиться на 

рисунках 1.12-1.14. 

Рисунок 1.12 – Диаграмма IDEF0 AS-IS для бизнес-процесса «Работа с Zabbix».  

24 

 
 
 
Рисунок 1.13 – Диаграмма IDEF0 AS-IS для бизнес-процесса «Работа с WhatsUp 
Gold».  

Рисунок 1.14 – Диаграмма IDEF0 AS-IS для бизнес-процесса «Работа с NetFlow 
Analyzer».  
1.1.12 Проверка внесенной информации на корректность (А23) 
Согласно регламенту документирования, сотруднику требуется проверить 

правильность внесенной информации в файл инвентаризации и ПО мониторинга.  

25 

 
 
 
Если  проверка  не  выявила  ошибок  в  документировании  в  дальнейшем 
сотрудники  используют  обновленный  файл  инвентаризации  и  информацию  из 
ПО мониторинга.  

Если ошибки были обнаружены, то требуется внести исправления.  

1.2 Назначение и цели создания системы 
Исходя  из  анализа  существующих  бизнес-процессов  компании  (п.  1.1), 
было выявлено, что для повышения эффективности работы компании в целом и 
сетевого  отдела  в  частности,  следует  внедрить  автоматическую  систему 
документирования и конфигурирования сетевого оборудования.  

1.2.1 Назначение системы 
предназначена 
Система 

конфигурирования, 
мониторинга,  поддержания  работы  сетевых  устройств  в  корпоративной 
вычислительной информационной сети. 

автоматизации 

для 

1.2.2 Цель системы 
Уменьшить время, проводимое сотрудником сетевого отдела ООО "ЭН+ 
ДИДЖИТАЛ" на решение рутинных задач, связанных с обслуживанием сетевых 
устройств  за  счет  введения  автоматизированной  системы конфигурирования  и 
документирования 
вычислительной 
информационный сети. 

корпоративной 

устройств 

сетевых 

1.3 Требования к системе 
1.3.1 Требованиям к функциональности системы 
Исходя из описания существующей ситуации в бизнес-процессах сетевого 
отдела  компании  EN+  DIGITAL  при  работе  с  сетевым  оборудованием  можно 
выделить следующий набор требований к ПО: 

‒ автоматизация конфигурирования сетевых устройств; 
‒ автоматизация документирование сетевых устройств; 
‒ автоматизация документирование сети; 
‒ конфигурирование множества сетевых устройств одновременно; 
‒ работа с группами устройств; 
‒ автоматизация сбора информации с устройств; 
‒ добавление,  обновление  и  удаление  информации  об  устройствах  в 

подсистему инвентаризации (модель, производитель, интерфейсы и прочее); 

‒ добавление,  обновление  и  удаление  информации  о  компании  в 

подсистему инвентаризации (офисы, географическое расположение и прочее); 

‒ добавление,  обновление  и  удаление  информации  о  сети  в  подсистему 

инвентаризации (ip-диапазоны, ip-адреса, VLAN'ы и прочее); 

‒ использование  информации  из  подсистемы  инвентаризации  в  задачах 

автоматизации; 

‒ отладка новых конфигураций на специально выделенном полигоне; 
‒ добавление,  обновление  и  удаление  информации  из  других  подсистем 

документирования сети (Zabbix, NetFlow Analyzer, WhatsUp Gold). 

26 

 
 
1.3.2 Требования к видам обеспечения к системе 
При планировании разработки системы следует предъявлять требования к 
системе  с  позиции  различного  программного  обеспечения.  Далее  приводятся 
требования  с  позиции  информационного,  программного,  технического  и 
организационного обеспечения.  

1.3.2.1 Информационное обеспечение 
ПО Ansible должен иметь доступ к полигону (если он находится на другой 

ЭВМ). 

ПО  Ansible  должно  иметь  доступ  к  ПО  NetBox  (если  он  находится  на 

другой ЭВМ). 

Система должна иметь доступ к интернету для скачивания обновлений 
Регулирование способа подключения и использования системы отдаются 

на предпочтение сотрудникам компании. 
1.3.2.2 Программное обеспечение 
Для функционирования системы требуются следующий набор ПО (версии 

должны быть не ниже приведенных): 

‒ Ubuntu (v22.04); 
‒ Python (3.10.8); 
‒ Ansible (6.5.0); 
‒ Netbox (3.3.5); 
‒ PostgreSQL (14.5); 
‒ Redis (4.0); 
‒ GNS3 (2.2.34); 
‒ GNS3 VM for VirtualBox (2.2.34); 
‒ Oracle VM VirtualBox Manager (6.1.38). 

1.3.2.3 Техническое обеспечение 
Для нормального функционирования системы требуется выделить ЭВМ с 

характеристиками, не уступающих представленным в таблице 1.2. 

27 

 
 
 
 
Таблица 1.2 – Требуемое аппаратное обеспечение 

Компонент 

Процессор 
Оперативная память 
Дисковое пространство 

Экземпляр 

AMD Ryzen 5 5600H, 3.30 GHz 
DDR4 16GB 
SSD 256GB 

1.3.2.4 Организационное обеспечение 
Данная  система  будет  использоваться  в  отделах  серверной  и  сетевой 

инфраструктуры компании EN+ DIGITAL 

Сопровождение  системы  должен  осуществлять  отдел  серверной 
инфраструктуры  в  совместной  работе  с  сетевым  отделом  (консультации, 
совместные работы и прочее). 

Сопровождающий персонал должен быть ознакомлен с принципом работы 
системы и её особенностями перед непосредственной работой. Обучение должно 
проводится  разбирающимся  в  этой  системе  специалисте  в  соответствии  с 
документацией о системе. 

Регулирование  работы  пользователей  с  системой  должно  составляться 
начальниками отделов сетевой и серверной инфраструктуры, информационной 
безопасности. 

Взаимодействие системы с внешними и внутренними системами компании 
регулируется  и  настраивается  сотрудниками  отдела  серверной  и  сетевой 
инфраструктуры, информационной безопасности. 

1.3.3 Общие технические требования 
1.3.3.1 Требования  к  численности  и  квалификации  персонала  и 

пользователей системы 

Для  нормальной  работы  системы  требуется  наличие  не  менее  3-х, 
обученных  к  работе  с  системой,  сотрудников  отдела  сетевой  и  серверной 
инфраструктуры. При возникновении ситуаций, связанных с системой, хотя бы 
1 сотрудник должен выйти на рабочую смену. 

Для  администрирования  системы  требуется  не  менее  2-3  человек 
серверной  инфраструктуре,  которые  разбираются  с  работой  стека  технологий 
системы. 

Персонал, работающий с системой, должен совершать только те действия, 

которые решают проблемы, оговоренные в его рабочем наряде. 

Под отказом системы понимается: 
‒ внеплановое  выключение  системы  (потеря  питания,  ошибка  системы, 

неисправность компонентов системы и прочее); 

‒ внеплановая  потеря  доступа  к  сети,  автоматизацию  который 

осуществляет система. 

28 

 
 
 
 
Персонал,  работающий  с  системой  автоматизации,  должен  быть 

квалифицирован в работе с: 
‒ ПО Ansible: 

•  конфигурационные файлы Ansible; 
•  синтаксис Ansible; 
•  отладка playbook; 
•  инвентарные файлы; 
•  плагины; 
•  файловыми разметками YAML и INI; 

‒ OS Linux: 

•  текстовые редакторы (VIM или NANO); 
•  базовое понимание работы Linux систем; 
•  терминал Linux; 

‒ GNS3 (или любой другой сетевой полигон); 
‒ гипервизор (WMWARE, VIRTUAL BOX, HyperV и другие); 
‒ ПО NetBox: 

•  WEB GUI; 
•  API. 

Персонал,  администрирующий  систему  автоматизации,  должен  быть 

квалифицирован в работе с: 

‒ OS Linux: 

•  текстовые редакторы (VIM или NANO); 
•  глубокое понимание работы Linux систем; 
•  терминал Linux; 
•  работа с сервисами (web, firewall и другие); 

‒ GNS3 (или любой другой сетевой полигон); 
‒ гипервизор (WMWARE, VIRTUAL BOX, HyperV и другие). 

1.3.3.2 Требования к показателям назначения 
В  случае  нарушения  в  системе  электропитания  функционирование 
системы  отдается  на  предпочтение  сотрудникам  компании.  Рекомендуется 
организовать подключение ЭВМ системы к сети через источник бесперебойного 
питания. 

Корректная  работа  системы  при  одновременном  обращении  к  ресурсам 
нескольких  пользователей  отдается  на  предпочтение  сотрудникам  компании. 
Рекомендуется организовать обработку таких ситуаций. 

При  подключении  новых  пользователей  система  должна  работать  в 

нормальном режиме. 
Система 

должна 

обеспечивать 

несколько 

сетевых 

устройств 

одновременно. Не менее 3 устройств одновременно.  

Обслуживание  устройств  при  помощи  системы,  должно  значительно 
сокращать  время,  требуемое для  решения  задачи.  К  примеру,  задачу,  которую 
сотрудник  решает  за  30  минут,  при  помощи  системы  должна  выполняться  в 
течении 5-15 минут. 

29 

 
Поиск  и  решение  неисправностей  в  системе  автоматизации  не  должен 
занимать более 6 часов для документированной ситуации. И не более 24 часов – 
для уникальной ситуации.  

1.3.3.3 Требования к надежности 
При  обнаружении  ошибки  или  неточности  в  работе  системы,  персоналу 

требуется обратиться к администраторам системы с подробным отчётом.  

Частота  резервного  копирования  системы  отдается  на  предпочтение 
сотрудникам  компании.  Рекомендуется  совершать  резервное  копирование 
системы раз в сутки. 

1.3.3.4 Требования по безопасности 
Техника  безопасности  внедрения  и 

эксплуатации  отдается  на 
предпочтение  сотрудникам  компании.  Рекомендуется  устанавливать  ЭВМ 
системы в серверную комнату. 

1.3.3.5 Требования к эргономике и технической эстетике 
Условия  труда  в  помещениях  персонала,  работающего  с  системой, 

отдается на предпочтение сотрудникам компании.  

1.3.3.6 Требования  к  эксплуатации,  техническому  обслуживанию, 

ремонту и хранению компонентов системы 

При эксплуатации системы персонал может:  
‒ находится в офисе компании; 
‒ у  себя  дома  (удаленный  рабочий  стол)  с  выполнением  техники 

безопасности эксплуатации систем компании. 

Рекомендуется  выполнять  быстрое  обслуживание  системы  раз  в  сутки, 

тщательное обслуживание – раз в неделю, в нерабочее время. 

1.3.3.7 Требования  к  защите  информации  от  несанкционированного 

доступа 

Безопасность  информации 

отдается  на  предпочтение 
сотрудникам компании (отделу информационной безопасности) в соответствии 
с внутренними регламентами о защите информации. 

системы 

30 

 
 
Рекомендуется организовать не менее 2 учетных записей системы: 
‒ администратор; 
‒ пользователь. 
Для каждой записи стоит использовать сложный пароль с периодической 

его заменой. 

Доступ  к  учетным  записям  должен  осуществляться  только  сотрудникам, 

имеющим соответствующие права и обязанности. 

1.3.3.8 Требования к защите от влияния внешних воздействий 
ЭВМ  с  системой  должна  находится  в  серверной  комнате.  Расположение 
ЭВМ  рекомендуется  организовать  в  стойке  для  минимизации  воздействия 
внешних факторов. 

1.3.3.9 Требования к патентной чистоте и патентоспособности 
ПО, используемое для создания системы, является бесплатным и свободно 
распространяемом  в  сети  интернет.  Рекомендуется  использовать  версии  с 
официальных сайтов разработчиков для сохранения авторских прав. 

1.3.4 Дополнительные требования  
1.3.4.1 Требования  к  составу  и  содержанию  работ  по  подготовке 

объекта автоматизации к вводу системы в действие 

К моменту сдачи подсистемы в опытную эксплуатацию должно быть: 
‒ предоставлено 

обеспечение, 

техническое 

соответствующее 

требованиям; 

‒ установлено  системное  программное  обеспечение,  соответствующее 

требованиям; 

‒ установлено программное обеспечение, разработанное в соответствии с 

требованиями. 

1.3.4.2 Требования к документированию 
Настоящее Техническое задание на подсистему должно разрабатываться в 

соответствии с ГОСТ 34.602-89 (автоматизированные системы). 

Для  разрабатываемого  программного  обеспечения  проектная  и 
эксплуатационная документация должна разрабатываться с учетом с требований 
ГОСТ 34.201- 89 и РД 50-34.698-90. 

Перечень разрабатываемой и представляемой документации включает: 
‒ техническое задание на создание системы; 
‒ документация Технического Проекта Системы в составе: 

•  Пояснительная записка; 
•  Руководство администратора. 

Документация,  разработанная  Исполнителем,  представляется  в  печатном 

виде.  

Система,  разработанная  Исполнителем,  представляется  в  виде  образа 

виртуальной машины на носителе или через репозиторий. 

31 

 
 
 
1.4 Обзор 

систем 
документирования сетевой инфраструктуры 

автоматизации 

конфигурирования 

и 

Выбор  ПО  для  решения  конкретных  задач  всегда  сопровождается 
анализом  и  сравнением  аналогов.  Далее  приводится  анализ  возможностей 
конкурентного ПО для  автоматизации конфигурирования  и  документирование 
сетевых устройств на основании [7-9]. 

1.4.1 NAPALM 
Network Automation and Programmability Abstraction Layer with Multivendor 
support – это библиотека для языка программирования Python, которая позволяет 
выполнять взаимодействие с различными ОС сетевого оборудования, используя 
объединённый API [10]. 

Другими  словами,  мы  пишем  программы  на  Python,  которые 
взаимодействуют  с  различными  сетевыми  устройствами.  Библиотека  же 
позволяет  упростить  многие  задачи.  Такие  программы  часто  называют 
скриптами. В программе должна быть четко прописана логика работы, иначе 
программа может работать некорректно. 

Благодаря  своей  доступности  и  хорошей  документации  обрела 

значительное комьюнити. 

1.4.2 NETMIKO 
Аналогично  NAPALM  –  это  библиотека  для  Python,  которая  позволяет 
упростить взаимодействие с сетевым оборудованием [11]. Главным отличием от 
NAPALM является, то, что NETMIKO взаимодействует через CLI (Console Line 
Interface), что увеличивает число поддерживаемого ПО. Но нужно и учитывать и 
тот факт, что на оборудовании от разных производителей некоторые принципы 
работы CLI могут отличаться. Так как это может породить некорректную работу 
программы или устройства. 

Распространяется бесплатным образом. А наличие хорошей документации 
создало  довольно  большое  комьюнити,  которое  продолжает  развивать 
библиотеку. 

1.4.3 Ansible  
Это  ПО  с  открытым  исходным  кодом,  которое  автоматизирует  поставку 
программного  обеспечения,  управление  конфигурацией  и  развёртывание 
приложений  [12].  Ansible  помогает  DevOps-специалистам  автоматизировать 
сложные задачи.  

32 

 
 
Главными преимуществами Ansible являются: 
‒ не требует установки дополнительного ПО на устройствах, на которых 

производится автоматизация; 

‒ не  важно  сколько  раз  будет  выполняться  операция,  результат  будет 

всегда одинаковым; 

‒ множество 
функциональность ПО; 

дополнительных 

модулей 

позволяет 

расширять 

‒ в  основе  Ansible  лежат  Python  и  YAML,  которые  считаются  довольно 

простыми для освоения. 

1.4.4 Ansible Tower 
Целая платформа автоматизации сети, в ядре которой работает Ansible. В 
отличие от обычного Ansible имеет встроенный WEB GUI и REST API. Наличие 
отличной  документации  и  поддержки  со  стороны  разработчиков,  позволяет 
решать большинство возникающих проблем с системой [13]. 

Имеет  различные  инструменты  для  мониторинга  устройств  и 
предоставления информации в виде графиков и схем. А система инвентаризации 
уже  встроена  в  платформу.  Права  пользователей  можно  делегировать,  а  их 
действия  документируются  в  автоматическом  режиме.  Помимо  этого,  имеет 
бесплатную пробную версию, доступную все желающим. 

Из недостатков можно отметить это цену, о которой нужно договариваться 
с  разработчиком,  а  также  отсутствие  полноценной  поддержки  сетевого 
оборудования.  Для  создания  автоматизации  множества  задач,  нужно  в 
программах автоматизации учитывать логику работы сетевых устройств. 

1.4.5 NetYCE 
Как  и  Ansible  Tower  –  является  платной  платформой  автоматизации, 
которая работает из коробки. Но существенным отличием от предыдущей – это 
полная ориентированность на работу с сетевыми устройствами. Поэтому работа 
с  сетевым  оборудованием  проходит  быстрее  и  проще  [14].  В  системе  встроен 
целый набор инструментов для обслуживания сетевых устройств: 

‒ инвентаризация; 
‒ распределение IP-пространства; 
‒ визуализация информации (схемы, графики); 
‒ автоматизация конфигурирования. 
Система также обладает GUI, API, распределением ролей пользователей, 

документированием их действий.  

Но из-за платной политики распределения комьюнити платформы нельзя 

назвать большим. 

1.4.6 Общее сравнение 
В  таблице  1.3  приведено  общее  сравнение  аналогов  исходя  из  раннее 

проведенного обзора. 

33 

 
 
 
Таблица 1.3 – Общее сравнение аналогов 

Название  Приоритет 

Плюсы 

Минусы 

‒ Высокая цена; 
‒ Небольшое комьюнити. 

‒ Высокая цена; 
‒ Нужно 
прописывать 
логику 
программ 
автоматизации  для  работы  с 
сетевым оборудованием; 
‒ Требуется 
работе с Ansible. 

обучиться 

‒ Нужно 
прописывать 
программ 
логику 
автоматизации  для  работы  с 
сетевым оборудованием; 
‒ Необходимо  использовать 
сторонне 
и 
специализированные модули 
для 
нужной 
функциональности; 
‒ Требуется 
работе с Ansible. 

получения 

обучиться 

ПО 

NetYCE 

1 

Ansible 
Tower 

2 

ролей 

действий 

‒ Ориентированность на работу с 
сетевым оборудованием; 
‒ Все  инструменты  в  одном 
месте; 
‒ Поддержка производителя; 
‒ GUI; 
‒ Документирование 
пользователей; 
‒ Распределение 
пользователей; 
‒ API; 
‒ Подробная документация; 
‒ Визуализация информации. 
‒ Тесная интеграция подсистем; 
‒ GUI для Ansible; 
‒ Распределение 
пользователей; 
‒ Документирование 
пользователей; 
‒ Представление  информации  в 
виде  графиков  и  схем  служба 
поддержки; 
‒ REST API; 
‒ Подробная документация; 
‒ Поддержка производителя; 
‒ Бесплатная пробная версия. 

действий 

ролей 

Ansible 

3 

‒ Бесплатный; 
‒ Большое комьюнити; 
‒ Подробная документация; 
‒ Большое количество сторонних 
расширяющих 
модулей, 
функциональность. 

34 

 
Продолжение таблицы 1.3 

Название  Приоритет 

Плюсы 

Минусы 

NETMIKO  4 

NAPALM 

5 

‒ Бесплатный; 
‒ Хорошая документация; 
‒ Комьюнити; 
‒ Поддерживает CLI. 

‒ Бесплатный; 
‒ Хорошая документация; 
‒ Комьюнити. 

‒ Требуется знание Python; 
‒ Нужно  прописывать  всю 
логику автоматизации. 

‒ Требуется знание Python; 
‒ Нужно  прописывать  всю 
логику автоматизации. 

Исходя  из  данных  таблицы  1.3  следует,  что  NetYCE  является  самым 
лучшим  вариантом  для  работы  с  сетевыми  устройствами.  Наличие  всех 
необходимых  инструментов  для  работы  с  сетевым  оборудованием,  делают 
данную платформу самым привлекательным решением, но стоит учитывать, что 
данное ПО платное и за пользование придется периодически платить. Поэтому 
для прототипа системы оно не подходит. 

Ansible  и  Ansible  Tower  универсальное  решения  большинства  задач 
автоматизации (не только при работе с сетевым оборудованием), но из-за этой 
универсальности  приходится  прописывать  логику  многих  действий.  Ansible 
Tower  стоит  рассматривать,  если  в  компании  будет  планироваться  внедрение 
системы автоматизации также в отдел серверной инфраструктуры. 

NETMIKO и NAPALM – являются лишь библиотекой для автоматизации 
самых  распространяемых  задач.  Для  работы  с  ними  также  требуется  знание 
языка  Python, поэтому они заметно проигрывают  Ansible, который имеет свой 
довольно  упрощенный  язык,  направленный  на  задачи  автоматизации  (по 
сравнению с полноценными языками программирования).  

В таблице 1.4 представлено сравнение аналогов по критериям. 

35 

 
 
 
Решение 

Таблица 1.4 – Сравнение аналогов по критериям 
Ansible + 
NetBox 
✔ 

Ansible 
Tower 
✖ 

NetYCE 

✔ 

Критерии 
Ориентированность 
на  работу  с  сетевыми 
устройствами 
Система 
инвентаризации 
Цена за месяц 
Документация 
Визуализация 
информации 
Распределение ролей 
Документирование 
действий 
пользователей 
Поддержка 
производителя 
GUI 
Мультивендорная 
поддержка 

от 

✔ 

✔ 

1.000.000р  2.500.000р 

✔ 

0р 
✔ 
✖ 

Частично 
Частично 

✖ 

✔ 
✔ 

✔ 
✔ 

✔ 

✔ 
Частично 

Частично 
Частично 

✔ 
✔ 

✔ 
✔ 

✔ 

✔ 
✔ 

NETMIKO  NAPALM 

✔ 

✖ 

0р 
✔ 
✖ 

✖ 
✔ 

✖ 

✖ 
✔ 

✖ 

✖ 

0р 
✔ 
✖ 

✖ 
✔ 

✖ 

✖ 
✖ 

Из  таблицы  1.4  понятно,  что  использование  Ansible  и  NetBox  для  задач 
автоматизации работы с сетевыми устройствами является самым оптимальным 
решением,  т.к.  решение  является  бесплатным,  а  функционал,  который  может 
понадобиться  в  будущем  может  быть  расширен  интеграцией  с  другими  ПО 
посредством  модулей.  Модули  пишутся  как  разработчиками,  так  и  членами 
сообщества. 

Если же мы выбираем между платными аналогами, то следует учитывать 
такой  фактор,  как  «нужна  ли  система  автоматизации  в  отделе  серверной 
инфраструктуре».  Если  ответ  отрицательный,  то  рекомендуется  приобрести 
лицензию NetYCE. Иначе стоит задуматься над покупкой Ansible Tower. 

Использование  библиотек  NETMIKO  и  NAPALM  является  самым 
неоптимальным  вариантом,  т.к.  возможности  библиотек  сильно  ограничены, 
хотя  и  не  отрицается  их  использование  в  каких-то  конкретных  задачах  или 
нуждах. 

1.5 Описание выбранных средств реализации системы 
В  данном  разделе  приводится  описание  ПО,  которое  было  выбрано  для 

реализации системы автоматизации. 

1.5.1 Ansible 
Ansible – это программный продукт, с открытым исходным кодом. Ansible 
позволяет  автоматизировать  передачу,  настройку  и  развертывание  различных 
приложений и ПО [12]. 

Из ключевых особенностей можно выделить: 

36 

 
 
‒ Ansible  не  требует  установки  дополнительного  ПО  на  удаленном 
оборудовании.  Все  функции  либо  выполняются  на  управляющем  устройстве, 
либо на языке Python, который присутствует в большинстве систем; 

‒ Не  важно  сколько  раз  будет  выполняться  какая-то  задача,  результат 
будет один и тот же. Ansible отслеживает, что повторное выполнение задачи не 
принесет нового результата и просто его пропускает; 

‒ Так как Ansible написан на Python и использует YAML разметку, поэтому 

считается довольно простым в изучении. 

Ansible  состоит  из  множества  различных  элементов,  выполняющие 

различные функции. Далее приводится их описание: 

‒ модули.  Программы,  которые  решают  определенные  задачи  на 

удаленном устройстве; 

‒ плагины.  Другое  их  название  –  коллекции.  Для  их  распространения 
существует  сайт  Ansible-Galaxy  [15].  Коллекции  могут  быть  написаны 
разработчиками ПО, сторонними разработчиками или пользователями; 

‒ инвентарь  конфигурируемых хостов. Инвентарём  может служить  файл 

или БД; 

‒ playbooks. Программы автоматизации задач на удаленных хостах; 
‒ переменные. Файлы с определенными переменные, которые позволяют 

гибко настроить работу с отдельным хостом или целой группой;  

‒ роли. Способ группировки множества задач для автоматизации работы и 

упрощения структуры файлов Ansible. 

1.5.2 NetBox 
NetBox  –  web-приложение  с  открытым  исходным  кодом,  которое 

позволяет управлять и документировать компьютерные сети [16]. 

NetBox позволяет: 
‒ управлять IP-пространством (IP-адреса, VRF, VLAN); 
‒ описать устройства (типы, расположение, производитель и прочее); 
‒ описать подключения устройств (сеть, консоль); 
‒ описать виртуализацию (виртуальные машины и кластеры); 
‒ описать передачу данных (провайдеры, дальняя связь); 
‒ описать способов шифрования. 

37 

 
 
 
На рисунке 1.15 представлен стек приложений NetBox: 

Рисунок 1.15 – Стек приложений NetBox. 

Стек работает следующим образом [17]: 
1.  Nginx  или  apache  сервер  принимает  и  обрабатывает  HTTP-запросы 

браузера, далее, передает их в Gunicorn; 

2.  Gunicorn  разбирает  данные.  Согласно  своей  конфигурации,  через 

протокол WSGI отдает их в Netbox; 

3.  NetBox  –  это  web-приложение,  написанное  на  фреймворке  Django. 
Обрабатывает  полученные  данные,  результат  отдает  обратно  nginx/Apache 
серверу. Те отправляют их клиенту. 

У ПО NetBox также имеется аналог в виде nautobot. Аналог имеет схожую 
функциональность.  Предпочтение  отдалось  NetBox  ввиду  его  большей 
популярности и более высоких оценок от сообщества.  

1.5.3 GNS3 
GNS3  это  ПО,  которое  способно  реализовать  эмуляцию  виртуальной 

сетевой инфраструктуры [18]. 
GNS3 используется для: 
‒ обучения сетевым технологиям; 
‒ ознакомления с особенностями устройств; 
‒ тестирование конфигураций устройств; 
‒ реализация демонстрационного лабораторного стенда; 
‒ замещение части реальной сетевой инфраструктуры. 

38 

 
 
 
 
2 Проектирование системы 
В данном разделе приводится описание процесса проектирования системы 

автоматизации. 

2.1 Моделирование  процессов  работы  с  сетевыми  устройствами  с 

учетом внедрения системы 

Идея внедрения системы, автоматизирующей рутинные задачи в сетевом 
отделе,  появилась  при  анализе  существующих  бизнес-процессов  отдела, 
связанных с работой с сетевыми устройствами. Подразумевается, что внедрение 
системы  должно  изменить  существующие  бизнес-процессы  при  работе  с 
сетевым  оборудованием  в  положительную  сторону:  упростить  алгоритм 
выполнение  задач,  структурировать  задачи,  уменьшить  время  на  выполнение 
задач и так далее. 

Моделирование  бизнес-процессов  компании  после  внедрения  системы, 
позволяет  оценить  эффект  от  внедрения  [3].  Модель  TO-BE  позволяет 
спланировать как изменяться существующие бизнес-процессы в компании после 
внедрения  системы  автоматизации.  Данную  модель  можно  использовать  для 
планирования  системы,  представления  заказчику  ожидаемых  результатов  и 
оценки конченых результатов. 

В  таблице  2.1  приводится  описание  всех  туннелей  при  моделировании 

бизнес-процессов TO-BE. 

Таблица 2.1 – Описание туннелей для модели процессов TO-BE. 
Сущность 

Описание применения туннеля 

На каких 
уровнях 
диаграммы 
встречается 

Руководство Ansible  А0 
А2 

А21 

А213 

А22 
А23 

А231 
А232 
А233 

Используется в качестве нормативного документа 
для  использования  ПО  Ansible  для  процесса 
«Работа  с  Ansible»  и  всех  нижестоящих.  Не 
отображается  на  нижних  уровнях  процесса,  но 
подразумевается его использование. 

Файл  конфигурации 
Ansible 

А2 

Текстовый  файл,  который  хранит 
себе 
конфигурацию  ПО  Ansible,  т.е.  отвечает  за 
особенности  работы  ПО.  Файл  предварительно 
требуется создать и описать основные параметры. 
Обозначается  туннелем,  т.к.  не  имеет  особой 
важности на вышестоящих процессах. 

в 

39 

 
Продолжение таблицы 2.1 
На каких 
Сущность 
уровнях 
диаграммы 
встречается 
А2 

отдела 

Сотрудник 
EN+ DIGITAL 

А21 

А22 

А2 

А22 
А23 

А231 
А232 
А233 

А2 

А23 

А231 
А232 
А233 

А2 

А23 

А231 
А232 
А233 

Конфигурация 
Ansible 

Регламент 
документирования 
устройств 

Регламент 
конфигурирования 
устройства 

Готовые Playbook 

А231 

Другие 
документирования  

системы 

А233 

Описание применения туннеля 

но 

сетевых 

подразумевается 

документирования 

Сотрудник  принимает  участие  в  процессах 
«Настройка  Ansible»  и  «Работа  с  группами  и 
переменными».  Обозначается  туннелем  т.к.  не 
отображается  на  нижестоящих  диаграммах,  но 
подразумевается  его  использование  в  качестве 
исполняющего бизнес-процессы. 
Используется как документ, регулирующий работу 
ПО Ansible. Обозначается туннелем для процессов 
«Работа  с  группами  и  переменными»  и  «Работа  с 
Playbook».  На  нижестоящих  диаграммах  не 
отображается, 
его 
использование. 
Используется в качестве нормативного документа 
для 
устройств. 
Обозначается  туннелем  для  процесса  «Работа  с 
Playbook».  Не  отображается  на  нижестоящих 
процессах, но подразумевается его использование. 
Используется в качестве нормативного документа 
устройств. 
для 
Обозначается  туннелем  для  процесса  «Работа  с 
Playbook».  Не  отображается  на  нижестоящих 
процессах, но подразумевается его использование. 
Раннее  написанные  программы  автоматизации, 
которые  можно  повторно  использовать  в  новых 
задачах.  Обозначается  туннелем,  т.к.  не  имеет 
особой важности в вышестоящих процессах. 
которые 
документирования 
Системы 
используются в сетевом отделе компании: Zabbix, 
NetFlow  Analyzer,  WhatsUp  Gold.  Обозначается 
туннелем,  т.к.  не  имеет  особой  важности  в 
вышестоящих процессах. 

конфигурирования 

сетевых 

сети, 

2.1.1 Работа с сетевым устройством (А-0) 
На  рисунке  2.1  представлена  диаграмма  IDEF0,  описывающая  верхний 
уровень бизнес-процесса «Работа с сетевым устройством» (А-0) после внедрения 
системы. 

40 

 
 
Рисунок 2.1 Диаграмма IDEF0 TO-BE для бизнес-процесса «Работа с сетевым 
устройством» верхнего уровня. 

После  внедрения  системы  бизнес-процесс  процесс  работы  с  сетевым 
устройством  систематизируется,  поэтому  вместо  конкретных  результатов 
выполнения  процесса,  результат  становится  абстрактной  сущностью,  которая 
зависит от поставленной задачи. Таким образом задачи по документированию и 
конфигурированию после внедрения системы рассматриваются как однородные. 
и 
тестирования сетевых устройств, появляется руководство по использованию ПО 
Ansible. Оно позволяет сетевому инженеру заниматься процессом автоматизации 
рутинных задач, используя ПО. 

конфигурирования, 

документирования 

регламентов 

Помимо 

Бизнес-процесс  выполняет  сотрудник  сетевого  отдела  EN+  DIGITAL, 

используя ПО Putty и Ansible, а также инструменты, встроенные в ОС. 

Так 

процессов 
конфигурирования и документирования, то для выполнения процесса требуется: 

автоматизацию 

направлена 

система, 

как 

на 

‒ несконфигурированное устройство; 
‒ задачи, которые оно решает; 
‒ инвентарную систему NetBox для документирования устройства и сети. 

41 

 
 
 
 
2.1.2 Работа с сетевым устройством (А0) 
На  рисунке  2.2  представлена  диаграмма  IDEF0  TO-BE,  детализирующая 
описание  бизнес-процесса  «Работа  с  сетевым  устройством»  (А0)  после 
внедрения системы. 

Рисунок 2.2 – Диаграмма IDEF0 TO-BE для бизнес-процесса «Работа с сетевым 
устройством» нижнего уровня. 

Используя систему, работа с сетевым оборудованием сводится к 3 этапам: 

1 этап – Подготовка устройства 
Первичная  подготовка  устройства,  для  работы  с  системой.  Для  каждого 
устройства требуется хотя бы один раз провести эту настройку. В дальнейшем, 
если  никаких  глобальных  изменений  в  работе  устройства  не  будет,  то 
перенастройка не требуется. 

Подготовка устройства заключается в конфигурировании SSH соединения 

между устройством и машиной с системой автоматизации. 
нормативного 

документа 

В 

используется 

регламент 

качестве 
конфигурирования. 

Для подключения к устройству используется ПО Putty. 
Для работы с SSH достаточно использование инструментария ОС. 
Бизнес-процесс выполняет сотрудник сетевого отдела. 
По  итогу  устройство  будет  подготовлено  к  работе  с  системой 

автоматизации. 

42 

 
 
 
 
 
2 этап – Работа с Ansible  
Процесс  работы  с  ПО  заключается  в настройке  ПО, описании устройств 
(работа с инвентарем) и написании программ автоматизации (работа с Playbook).  
регламенты 
(конфигурирование,  документирование  и  тестирование),  а  также  руководство 
Ansible. 

бизнес-процесса 

используются 

данного 

Для 

все 

Процесс исполняет сотрудник сетевого отдела, используя инструментарий 

ОС и ПО Ansible. 

Чтобы  выполнить  задачи  автоматизации,  требуется  система  NetBox, 

подготовленное устройство и задачи, которое оно должно выполнять. 

По  итогу  будут  получены:  новый  отлаженный  Playbook  (программа 
автоматизации)  и  результат  его  исполнения,  который  нужно  в  дальнейшем 
проверить на корректность. 

3 этап – Проверка результатов работы  
Результаты  операций,  которые  выполнил  Playbook,  нужно  проверить  на 

корректность. 

Проверка совершается согласно с регламентом тестирования устройства. 
Процесс выполняет сотрудник сетевого отдела. 
Если  результат  удовлетворителен,  то  на  этом  работа  с  устройством 

заканчивается. 

Если результат не соответствует ожидаемому, то требуется выявить в чем 

была ошибка при исполнении Playbook и решить её. 

2.1.3 Подготовка устройства (А1) 
На  рисунке  2.3  представлена  диаграмма  IDEF0  TO-BE,  детализирующая 

описание бизнес-процесса «Подготовка устройства» (А1). 

43 

 
 
Рисунок 2.3 – Диаграмма IDEF0 TO-BE для бизнес-процесса «Подготовка 
устройства». 

Чтобы  работать  с  устройством,  используя  систему  автоматизации, 
требуется  установка  удаленного  доступа  по  протоколу  SSH.  Для  повышения 
безопасности рекомендуется использование пары ключей SSH. 

На  машине  с  системой  автоматизации  необходимо  создать  пару  ключей 

SSH согласно регламенту конфигурирования устройства. 

Для этого используется терминал и протокол SSH – два инструмента ОС. 
Ключи создает сотрудник. 
Когда  ключи  были  созданы,  необходимо  настроить  SSH  доступ  к 
устройству. Для этого сотрудник, используя ПО Putty, удаленно подключается к 
устройству. Настраивает на нем протокол SSH для удаленного доступа по ключу. 
Настройка  SSH  на  устройстве  совершается  согласно  регламенту 

конфигурирования устройства. 

После  этого  устройство  можно  считать  подготовленным  к  работе  с 

системой автоматизации. 

44 

 
 
 
 
2.1.4 Работа с Ansible (А2) 
На  рисунке  2.4  представлена  диаграмма  IDEF0  TO-BE,  детализирующая 

описание бизнес-процесса «Работа с Ansible» (А2). 

Рисунок 2.4 – Диаграмма IDEF0 TO-BE для бизнес-процесса «Работа с Ansible». 

Работа с ПО Ansible выполняется в 3 этапа: 
1 этап – Настройка Ansible 
Чтобы Ansible решал поставленные задачи в самом начале его требуется 
настроить,  т.е.  указать  ПО  принципы  его  работы.  В  дальнейшем  ПО  можно 
перенастроить в зависимости от потребностей и задач. 

Чтобы  настроить  Ansible,  требуется  файл  конфигурации,  который 

необходимо создать в начале работы с ПО.  

Сотрудник  сетевого  отдела,  используя  терминал  –  инструмент  ОС, 

настраивает ПО согласно руководству Ansible. 

По итогу должны получиться конфигурация и инвентарь. 

45 

 
 
 
 
 
2 этап – Работа с группами и переменными 
Процесс  посвящен  описанию  устройств,  на  которых  выполняется 
автоматизация  задач.  Группы  –  объединяют  устройства,  чтобы  можно  было 
одновременно работа с несколькими устройствами одновременно. Переменные 
позволяют описывать как группы устройств, так и отдельные устройства. 

Процесс  выполняется  по  руководству  Ansible  и  в  соответствии  с 

конфигурацией Ansible. 

Для  выполнения  процесса,  сотрудник  сетевого  отдела  использует 

инструментарий ОС. 

По  итогу  из  задач  устройства  и  инвентаря,  будут  составлены  файлы  с 

переменными, а в инвентаре появится описание групп устройств.  

3 этап – Работа с Playbook 
Работа  с  программами  автоматизации  заключается  в  их  написании, 

отладки и исполнении. 
процесса 

Для 

требуются 

все 

регламенты 

(документирование, 

конфигурирование и тестирование устройств) и руководство Ansible. 

Чтобы получить новый отлаженный Playbook и результат его исполнения, 
требуется:  инвентарь,  файлы  переменных,  ПО  NetBox,  подготовленное 
устройство. 

Для  выполнения  процесса,  сотрудник  сетевого  отдела  использует 

инструментарий ОС и ПО Ansible. 

2.1.5 Настройка Ansible (А21) 
На  рисунке  2.5  представлена  диаграмма  IDEF0  TO-BE,  детализирующая 

описание бизнес-процесса «Настройка Ansible» (А21). 

46 

 
 
Рисунок 2.5 – Диаграмма IDEF0 TO-BE для бизнес-процесса «Настройка 
Ansible». 

Под настройкой Ansible понимается работа с конфигурацией Ansible, т.е. 

описание работы ПО, объявление переменных Ansible и работа с инвентарём. 

Сотрудник сетевого отдела, используя тестовый редактор изменяет файл 
конфигурации, тем самым описывая его принцип работы. Процесс выполняется 
в соответствии с руководством Ansible. 

После  описания  особенностей  работы  ПО,  потребуется  объявить 
соответствующие  переменные  Ansible. Переменные и особенности работы ПО 
вместе  образуют  конфигурации  Ansible.  Процесс  выполняется  в  файле 
конфигурации. 

При  настройке  Ansible  важно  создать  и  описать  инвентарь,  в  котором 
хранится  информация  об  устройствах.  В  качестве  инвентаря  используется 
инвентарь Ansible и инвентарная система NetBox.  

47 

 
 
 
 
2.1.6 Работа с инвентарем (А213) 
На  рисунке  2.6  представлена  диаграмма  IDEF0  TO-BE,  детализирующая 

описание бизнес-процесса «Работа с инвентарем» (А213). 

Рисунок 2.6 – Диаграмма IDEF0 TO-BE для бизнес-процесса «Работа с 
инвентарем». 

Для  более  гибкой  работы  системы  автоматизации,  предполагается 
использование  двух  инвентарей.  Инвентарь  Ansible  –  служит  для  первичного 
описания  устройства,  которое  будет  использоваться  в  задачах  автоматизации. 
NetBox  –  инвентарная  система,  которая  хранит  подробную  информацию 
устройства и представляет её в наглядном виде. В отличие от инвентаря Ansible, 
информация  в  NetBox  будет  использоваться  всеми  сотрудниками  сетевого 
отдела, т.е. не только в задачах автоматизации.  

Работа  с  инвентарем  Ansible  заключается  в  создании  файла  инвентаря  и 
наполнение его информацией об устройствах и дальнейшее его обновление. Для 
выполнения  данных  процессов  используется  текстовый  редактор.  Процесс 
выполняется  сотрудником  сетевого  отдела  в  соответствии  с  руководством 
Ansible.  

Использование  NetBox 

как  инвентаря  позволяет  подробно  и 
систематизировано  описать  устройство.  Для  этого  сотрудник  сетевого  отдела, 
используя WEB GUI, изменяет информацию, хранящуюся в БД NetBox. 

48 

 
 
 
 
2.1.7 Работа с группами и переменными (А22) 
На  рисунке  2.7  представлена  диаграмма  IDEF0  TO-BE,  детализирующая 

описание бизнес-процесса «Работа с группами и переменными» (А22).  

Рисунок 2.7 – Диаграмма IDEF0 TO-BE для бизнес-процесса «Работа с 
группами и переменными». 

Создание групп позволяет выполнять задачи одновременно на нескольких 
подобных  устройствах,  а  объявление  переменных  позволяет  описать  как  с 
устройством работать и как его конфигурировать. 

Переменные  можно  объявлять  как  для  отдельных  устройств,  так  и  для 

целых групп. Для работы с переменными и группами было выделено 3 этапа: 

49 

 
 
 
 
 
1 этап – Объявление переменных для устройства 
Для  объявления  переменных  для  конкретного  устройства,  необходимо 
создать  соответствующий  файл  в  директории,  где  хранятся  файлы  с 
переменными для отдельных хостов.  

Переменные  объявляются  исходя  из  задач  устройства.  Для  корректного 
объявления  переменных  нужно  учитывать  конфигурацию  Ansible  и  алгоритм, 
описанный в руководстве Ansible.  

Чтобы  объявить  переменные,  сотруднику  достаточно  воспользоваться 
терминалом  ОС  и  текстовым  редактором,  чтобы  создать  и  изменить 
соответствующий текстовый файл. 

2 этап – Создание групп устройств 
Для  объявления  переменных  для  групп  устройств,  необходимо  сначала 

создать эти группы.  

Создаются  группы  в  инвентаре  исходя  из  их  функциональности  (задач, 

которые они решают).  

В  зависимости  от  инвентаря  (Ansible  или  NetBox)  будет  отличаться 
инструмент, которым необходимо воспользоваться сотруднику сетевого отдела.  
Если  это  инвентарь  Ansible,  то  достаточно  воспользоваться  текстовым 

редактором.  

Если это NetBox, то необходимо воспользоваться его WEB GUI. 
Создание  групп  выполняется  в  соответствии  с  конфигурацией  и 

руководством Ansible 

По итогу в инвентаре появляются группы, к которым принадлежат схожие 
устройства по какому-либо признаку (местоположение или функциональность, к 
примеру).  

3 этап – Объявление переменных для групп устройств 
Когда  группа  была  создана,  можно  аналогично  создать  файл  с 
переменными для группы устройств. Стоит учитывать, что файлы переменных 
для групп устройств и для отдельных устройств находятся в разных директориях.  
Процесс выполняется согласно конфигурации и руководству Ansible.  
Так  же,  как  и  для  объявления  переменных  для  устройств  сотруднику 
достаточно  использоваться  терминал  ОС  и  текстовый  редактор  для  работы  с 
текстовыми файлами переменных групп устройств. 

Для  дальнейших  процессов  файлы  переменных  для  групп  устройств  и 
файлы  переменных  для  отдельных  устройств,  будут  обозначаться  просто  как 
«Файлы переменных». 

50 

 
 
2.1.8 Работа с Playbook (А23) 
На  рисунке  2.8  представлена  диаграмма  IDEF0  TO-BE,  детализирующая 

описание бизнес-процесса «Работа с Playbook» (А23). 

Рисунок 2.8 – Диаграмма IDEF0 TO-BE для бизнес-процесса «Работа с 
Playbook». 

Работа с Playbook является самым важным процессом при работе с сетевым 
оборудованием  после  внедрение  системы.  Именно  исполнение  Playbook 
отвечает  за  все  изменения,  которые  будет  происходить  в  конфигурации 
устройства и в системах документации сети. 

Процесс разделен на 3 этапа: 
1 этап – Составление Playbook 
Составление Playbook – это написание программы автоматизации какой-
либо задачи. При написании необходимо учитывать логику работы устройства 
или системы документации, чтобы результат соответствовал результатам.  

Основываясь  на  задачах  устройства,  инвентаре  и  переменных  создается 
набор  Playbook  и  один  комплексных  Playbook.  Такой  принцип  рекомендован 
руководством Ansible для последующих отладки и поиска неисправностей.  

Для  написания  Playbook  сотруднику  сетевого  отдела  достаточно 

воспользоваться инструментами ОС. 

Процесс выполняется в соответствии с регламентами, которые регулируют 
автоматизированную  задачу.  К  примеру,  если  проводится  документирование 
устройства,  то  используются  регламент  документирования  устройства.  А  если 
конфигурируем, то регламент конфигурирования устройства. 

51 

 
 
 
Так же при написании  Playbook необходимо учитывать и конфигурацию 

Ansible. 

2 этап – Отладка Playbook 
Написанный  Playbook  перед  исполнением  необходимо  отладить  на 
неисправности  и  ошибки,  а  также  протестировать  на  виртуальном  полигоне 
результат его исполнения. 

Сотрудник  сетевого  отдела  выполняет  отладку  в  соответствии  с 
регламентами  конфигурирования,  документирования  и  тестирования  сетевого 
устройства, а также согласно руководству и конфигурации Ansible. 

Отладка проводится при помощи средств Ansible и инструментов ОС. 
При проведении отладки важно убедиться, что: 
‒ задачи автоматизированы именно на тех устройствах, на которых было 

необходимо; 

‒ устройства  имеют  именно  ту  функциональность,  которая  была 

необходима. 

Когда отладка была проведена успешно, Playbook считается отлаженным 

и готовым к исполнению в реальной сетевой инфраструктуре. 

3 этап – Исполнение Playbook 
Когда  Playbook  был  написан  и  отлажен  им  можно  пользоваться  для 

решения конкретной задачи (задач) в настоящей сети. 
сотруднику 

исполнить 
соответствующую команду ПО Ansible.  

Playbook, 

Чтобы 

требуется 

выполнить 

Для исполнения Playbook требуется подготовленное устройство и NetBox. 
сетевого  отдела  выполняет  исполнение  Playbook  в 
Сотрудник 
соответствии с регламентами конфигурирования и документирования сетевого 
устройства, а также согласно руководству и конфигурации Ansible. 

Результат исполнение далее следует проверить на корректность. 

2.1.9 Составление Playbook (А231) 
На  рисунке  2.9  представлена  диаграмма  IDEF0  TO-BE,  детализирующая 

описание бизнес-процесса «Составление Playbook» (А231). 

52 

 
 
Рисунок 2.9 – Диаграмма IDEF0 TO-BE для бизнес-процесса «Составление 
Playbook». 

Чтобы  составить  Playbook,  который  решает  конкретную  задачу  на 

конкретном устройстве (группе устройств), следует: 

‒ использовать готовые Playbook, которые решают часть задачи; 
‒ написать новые Playbook, которые решают недостающие задачи; 
‒ соединить набор Playbook в один комплексный. 
1 этап – Поиск Playbook среди ранее написанных 
Среди  написанных  Playbook  следует  отыскать  те,  которые  можно 
использовать  для  решения  текущей  задачи.  Поэтому  важно  грамотно 
структурировать  файлы  Ansible.  Файлы  Playbook  стоит  также  называть  так, 
чтобы  было  понятно  какую  задачу  и  на  каких  устройствах  они  решают.  Это 
описано  в  руководстве  Ansible  и  должно  быть  описано  в  регламентах 
конфигурирования  и  документирования  сетевых  устройств  в  компании  после 
внедрения системы. 

Чтобы осуществить поиск Playbook, сотруднику достаточно использовать 

терминал ОС. 

2 этап – Написание недостающих Playbook 
Если  ранее  написанные  Playbook  не  могут  в  полной  мере  решить 

поставленную задачу, требуется написать новые.  

На основе задач устройства, переменных и инвентаря сотрудник сетевого 
отдела  пишет  новые  программы  автоматизации.  Для  этого  ему  необходимо 
использовать текстовый редактор. 

53 

 
 
Написание  новых  Playbook  выполняется  в  соответствии  с  регламентами 
конфигурирования и документирования сетевого устройства, а также согласно 
руководству и конфигурации Ansible. 

В итоге должен получиться набор  Playbook, которые полностью решают 

задачу. Далее требуется их объединить в один комплексный Playbook. 

3 этап – Составление комплексного Playbook 
Ранее  написанные  Playbook  следует  объединить  в  один  комплексный, 

чтобы упростить исполнение и отладку. 

Сотрудник  сетевого  отдела,  используя  текстовый  редактор,  из  набора 
Playbook  и  инвентаря  получает  комплексный  Playbook,  решающий 
поставленную задачу. 

Процесс выполняется в соответствии с регламентами конфигурирования и 
документирования  сетевого  устройства,  а  также  согласно  руководству  и 
конфигурации Ansible. 

2.1.10 Отладка Playbook (А232) 
На рисунке 2.10 представлена диаграмма IDEF0 TO-BE, детализирующая 

описание бизнес-процесса «Отладка Playbook» (А232). 

Рисунок 2.10 – Диаграмма IDEF0 TO-BE для бизнес-процесса «Отладка 
Playbook». 

54 

 
 
 
 
Написанный Playbook необходимо отладить перед исполнением. 
Отладка состоит из 3 этапов: 
1 этап – Синтаксическая проверка 
Требуется  проверить  кода  программы  автоматизации  на  соответствие 

синтаксису Ansible. 

Для 

этого 

сотруднику 

сетевого 

отдела 

необходимо 

вызвать 

соответствующую команду Ansible и указать файл для проверки. 

Процесс выполняется в соответствии с регламентами конфигурирования и 
также  с  руководством  и 

документирования  сетевого  устройства,  а 
конфигурацией Ansible. 

Если в результате проверки ошибки не были обнаружены, то проводится 
проверка  на  логику  программы  автоматизации  на  специальном  виртуальном 
сетевом полигоне. 

Если в результате проверки были обнаружены ошибки, то Ansible выдаст 
соответствующее  сообщение.  В  сообщение  будет  описаны  синтаксические 
ошибки, которые необходимо исправить. 

2 этап – Проверка корректности результатов на сетевом полигоне 
Сетевой полигон – это виртуальная часть сети, которая имитирует работу 

настоящей. 

В  данном  процессе  сотруднику  требуется  на  сетевом  полигоне  выявить, 

что задачи были выполнены на определенных устройствах. 

Процесс выполняется в соответствии с регламентами конфигурирования и 
документирования  сетевого  устройства,  а  также  согласно  руководству  и 
конфигурации Ansible. 

Если ошибок не было выявлено можно приступать к исполнению Playbook 

в реальной сети. А Playbook считается отлаженным. 

Если были выявлены ошибки, то код Playbook требуется исправить. 
3 этап – Корректировка Playbook  
Если Playbook не соответствует требованиям, то его необходимо исправить. 
Для  этого  сотруднику  сетевого  отдела  требуется  при  помощи  текстового 
редактора  выявить  место  несоответствия  в  коде  программы  автоматизации  и 
исправить его. 

Исправленный  Playbook  отправляется  на  повторную  синтаксическую  и 

логическую проверку (на полигоне). 

2.1.11 Исполнение Playbook (А233) 
На рисунке 2.11 представлена диаграмма IDEF0 TO-BE, детализирующая 

описание бизнес-процесса «Исполнение Playbook» (А233). 

55 

 
 
Рисунок 2.11 – Диаграмма IDEF0 TO-BE для бизнес-процесса «Исполнение 
Playbook». 

После  того  как  Playbook  был  написан  и  отлажен  его  можно  исполнить, 

чтобы решить поставленную задачу в реальной сети. 

Процесс выполняется в соответствии с регламентами конфигурирования и 
документирования  сетевого  устройства,  а  также  согласно  руководству  и 
конфигурации Ansible. 

Сотрудник  сетевого  отдела  запускает  исполнение  Playbook  при  помощи 

ПО Ansible. 

Далее Ansible выполняет код программы автоматизации: 
‒ Конфигурирует подготовленное устройство; 
‒ Документирует подготовленное устройство в системе NetBox и других 

системах документирования сети (Zabbix, WhatsUp Gold, Netflow Analyzer). 

Сконфигурированное  устройство  и  информация  о  нем  в  системах 
документирования сети считается как результат работы Playbook, которые далее 
требуется проверить на корректность (см. п. 2.1.2 «Работа с сетевым устройством 
(А0)»). 

56 

 
 
 
 
2.2 Варианты использования системы 
В  данном  разделе  приводится  информация  о  вариантах  использования 

системы для автоматизации задач при работе с сетевым оборудованием. 

На  рисунке  2.12  представлена  диаграмма  вариантов  использования 

системы автоматизации. 

Рисунок 2.12 – Use-case диаграмма. 

Далее  приводится  описание  сценариев  использования  системы  для 

решения конкретных задач [19]. 

2.2.1 Сценарий «Авторизация в системе» 
Перед  началом  работы  с  системой  пользователю  требуется  подтвердить 
свой  набор  прав,  посредством  авторизации  в  ОС  на  ЭВМ  с  системой  и  в  ПО 
NetBox.  Описание  сценария  приведено  в  таблице  2.2.  Описание  альтернатив 
сценария приведено в таблице 2.3. 

57 

 
 
 
 
 
Таблица 2.2 – Описание сценария «Автоматизация в системе» 

Действующие лица  Пользователь, ОС, NetBox 
Цели 

Пользователь: авторизоваться в системе и начать работать с ней; 
ОС: идентифицировать пользователя и его права при работе с ОС; 
NetBox: идентифицировать пользователя и его права при работе с 
NetBox. 

Успешный сценарий: 

1.  Пользователь подключается по удаленному доступу к ЭВМ с системой; 
2.  ОС открывает сессию пользователя, предлагает ввести логин и пароль; 
3.  Пользователь вводит логин и пароль; 
4.  ОС проверяет логин и пароль; 
5.  ОС выдает пользователю сообщение об успешной авторизации; 
6.  Вызов сценария «Авторизация в NetBox» (п. 2.2.10). 

Результат 

Пользователь  авторизирован  в  системе,  имеет  выданный  ему 
регламентом набор прав и может приступать к работе с системой. 

Таблица 2.3 – Описание альтернатив сценария «Авторизация в системе» 

Расширения: 
1а 

5а 

ЭВМ не доступна. 
ПО для удаленного доступа выдает соответствующее сообщение. 
Результат: пользователь не может подключиться к ЭВМ с системой. 
Пользователь с введенным логином и паролем не найден. 
ОС выдает соответствующее сообщение. 
Результат: отказ в авторизации. 
Переход на шаг 2. 

2.2.2 Сценарий «Работа с Ansible» 
Сценарий  работы  с  Ansible  –  это  комплексный  сценарий  состоящих  из 
нескольких подсценариев, которые решают разные задачи. Среди них: работа с 
конфигурацией Ansible, работа с Playbook, работа с инвентарём Ansible. 

В таблице 2.4 приводится описания сценария «Работа с Ansible», который 
является  подготовительным  для  решения  дальнейших  задач.  В  таблице  2.5  – 
описание альтернатив сценария. 

Таблица 2.4 – Описание сценария «Работа с Ansible» 

Действующие лица 
Цели 

Успешный сценарий: 

Пользователь, терминал ОС 
Пользователь: начать работать с Ansible; 
Терминал ОС: предоставить возможности для работы с ОС. 

1.  Вызов сценария «Авторизация в системе» (п. 2.2.1); 
2.  Пользователь открывает терминал; 
3.  Пользователь, используя терминал, создает нужную директорию; 
4.  Пользователь, используя терминал, открывает нужную директорию. 

Результат 

Пользователь успешно начал работать с Ansible. 

58 

 
 
 
 
 
Таблица 2.5 – Описание альтернатив сценария «Работа с Ansible» 

Расширения: 
3а 

Директория уже существует. 
Переход к шагу 4. 

2.2.3 Сценарий «Работа с конфигурацией Ansible» 
Перед  работой  с  Ansible  нужно  провести  базовую  настройку.  Ansible 
можно  настроить  под  свои  нужды  и  особенности  бизнес-процессов.  Описание 
сценария приведено в таблице 2.6. Описание альтернатив сценария – в таблице 
2.7. 

Таблица 2.6 – описание сценария «Работа с конфигурацией Ansible» 

Действующие лица  Пользователь, терминал ОС, текстовый редактор 
Пользователь: настроить Ansible под свои нужды; 
Цели 
Терминал ОС: предоставить возможности для работы с ОС; 
Текстовый  редактор:  предоставить  возможность  работать  с 
текстовыми файлами. 

Успешный сценарий: 

1.  Вызов сценария «Работа с Ansible» (п 3.2); 
2.  Пользователь, используя терминал, создает файл конфигурации; 
3.  Пользователь,  используя  терминал,  открывает  файл  конфигурации  в  текстовом 

редакторе; 

4.  Пользователь вводит параметры, используя текстовый редактор; 
5.  Пользователь сохраняет файл, используя текстовый редактор. 

Результат 

Пользователь успешно настроил конфигурацию Ansible. 

Таблица  2.7  –  Описание альтернатив сценария  «Работа с конфигурацией 

Ansible» 
Расширения: 
2а 

Файл конфигурации уже существует. 
Переход к шагу 3. 

2.2.4 Сценарий «Работа с Playbook» 
Сам  по  себе  сценарий  не  имеет  последовательности  действий  и 
конкретного результата. Работа с Playbook – это обобщение важных для работы 
с  системой  сценариев  при  взаимодействии  с  Playbook.  Данный  сценарий 
включает следующие подсценарии: создание, изменение и исполнение Playbook, 
а также использование инвентаря. Но для работы с Playbook обязательно наличие 
хотя бы одного Playbook, поэтому необходимо его создание. Описание сценария 
представлено в таблице 2.8. Описание альтернатив сценария – в таблице 2.9. 

59 

 
 
 
 
 
 
Таблица 2.8 – Описание сценария «Работа с Playbook» 

Действующие лица  Пользователь  
Цели 
Успешный сценарий: 

Пользователь: начать работать с Playbook. 

1.  Начать работать с Playbook. 

Результат 

Пользователь начал работу с Playbook. 

Таблица 2.9 – Описание альтернатив сценария «Работа с Playbook» 

Расширения: 
1а 

Ни один Playbook ещё не был создан. 
Вызов сценария «Создание Playbook» (п. 2.2.5). 

2.2.5 Сценарий «Создание Playbook» 
Создание  Playbook  –  это  первый  шаг  к  автоматизации  рутинной  задачи. 
Помимо  простого  создания  файла,  сценарий  включает  в  себе  написания 
программы  автоматизации  и  синтаксическую  проверку  Playbook.  Описание 
сценария приведено в таблице 2.10. Описание альтернатив сценария – в таблице 
2.11. 

Таблица 2.10 – Описание сценария «Создание Playbook» 

Действующие лица 
Цели 

Пользователь, терминал ОС, текстовый редактор, Ansible 
Пользователь:  создать,  написать  Playbook  и  проверить  его  на 
синтаксические ошибки; 
Терминал ОС: предоставить возможности для работы с ОС; 
Текстовый  редактор:  предоставить  возможность  работать  с 
текстовыми файлами; 
Ansible: проверить корректность синтаксиса кода Playbook. 

Успешный сценарий: 

1.  Вызов сценария «Работа с Playbook» (п. 2.2.4); 
2.  Пользователь, используя терминал, создает файл Playbook; 
3.  Пользователь, используя терминал, открывает Playbook в текстовом редакторе; 
4.  Пользователь пишет код Playbook, используя текстовый редактор; 
5.  Пользователь сохраняет Playbook, используя текстовый редактор; 
6.  Пользователь запускает синтаксическую проверку Playbook Ansible; 
7.  Ansible не выдает ошибок по окончанию проверки. 

Результат 

Пользователь успешно создал и написал Playbook. 

Таблица 2.11 – Описание альтернатив сценария «Создание Playbook». 

Расширения: 
2а 

7а 

Файл уже существует. 
Вызов сценария «Изменение Playbook» (п. 2.2.6). 
Ansible выдает ошибку при синтаксической проверке Playbook. 
Результат: в Playbook найдена ошибка. 
Вызов сценария «Изменение Playbook» (п. 2.2.6). 

2.2.6 Сценарий «Изменение Playbook» 
Под 

изменением 

Playbook 

дополнение 
существующего кода для детализации автоматизации задачи, либо исправление 

подразумевается 

либо 

60 

 
 
 
 
ошибок  в  логике  или  синтаксисе  программы.  Описание  сценария  приведено  в 
таблице 2.12. Описание альтернатив сценария – в таблице 2.13. 

Таблица 2.12 – Описание сценария «Изменение Playbook» 
Действующие лица  Пользователь, терминал ОС, текстовый редактор, Ansible 
Цели 

Пользователь:  изменить  написанный  Playbook  и  проверить  его  на 
синтаксические ошибки; 
Терминал ОС: предоставить возможности для работы с ОС; 
Текстовый  редактор:  предоставить  возможность  работать  с 
текстовыми файлами; 
Ansible: проверить корректность синтаксиса в Playbook. 

Успешный сценарий: 

1.  Вызов сценария «Работа с Playbook» (п 3.4); 
2.  Пользователь, используя терминал, открывает Playbook в текстовом редакторе; 
3.  Пользователь вносит изменения в Playbook, используя текстовый редактор; 
4.  Пользователь сохраняет Playbook, используя текстовый редактор; 
5.  Пользователь запускает синтаксическую проверку Playbook Ansible; 
6.  Ansible не выдает ошибок по окончанию проверки. 

Результат 

Пользователь успешно изменил Playbook. 

Таблица 2.13 – Описание альтернатив сценария «Изменение Playbook» 

Расширения: 
2а 

6а 

Файл не существует. 
Вызов сценария «Создание Playbook» (п. 2.2.5). 
Ansible выдает ошибку при синтаксической проверке Playbook. 
Результат: в Playbook найдена ошибка. 
Переход к шагу 2. 

2.2.7 Сценарий «Работа с инвентарем Ansible» 
Инвентарь  –  неотъемлемый  элемент  при  автоматизации  задач.  В 
инвентарном  файле  описываются  устройства,  с  которыми  работает  система. 
Также  в  файле  инвентаризации  устройства  распределяются  на  группы,  с 
которыми в последствии можно работать как с единой сущностью. Также важной 
частью  является  и  объявление  переменных  устройств  и  групп  устройств.  Это 
позволяет  описать  важную  информацию  об  устройстве  или  группе,  и  в 
дальнейшем  с  ней  работать  в  задачах  автоматизации.  Описание  сценария 
приведено в таблице 2.14. Описание альтернатив сценария в таблице 2.15. 

61 

 
 
 
 
 
Таблица 2.14 – Описание сценария «Работа с инвентарём Ansible» 

Действующие лица  Пользователь, терминал ОС, текстовый редактор 
Пользователь: поработать с инвентарем Ansible; 
Цели 
Терминал ОС: предоставить возможности для работы с ОС; 
Текстовый  редактор:  предоставить  возможность  работать  с 
текстовыми файлами. 

Успешный сценарий: 

1.  Вызов сценария «Работа с Ansible» (п. 2.2.2); 
2.  Пользователь, используя терминал создает файл инвентаря Ansible; 
3.  Пользователь, используя терминал, открывает файл в текстовом редакторе; 
4.  Пользователь вносит изменения в файл, используя текстовый редактор; 
5.  Пользователь сохраняет файл, используя текстовый редактор. 

Результат 

Пользователь успешно поработал с инвентарем Ansible. 

Таблица  2.15  –  Описание  альтернатив  сценария  «Работа  с  инвентарём 

Ansible» 
Расширения: 
2а 

Файл уже существует. 
Переход к шагу 3. 

запустить 

2.2.8 Сценарий «Исполнение Playbook» 
Чтобы выполнить рутинную задачу при работе с сетевым оборудованием, 
Результат 
необходимо 
проконтролировать. Если результат не удовлетворяет пользователя или во время 
исполнения  Playbook 
перепроверить 
конфигурацию Ansible, описание инвентаря и корректность логики и синтаксиса 
исполняемого Playbook. Описание сценария приведено в таблице 2.16. Описание 
альтернатив сценария – в таблице 2.17. 

написанный 

необходимо 

Playbook. 

возникла 

ошибка, 

заранее 

62 

 
 
 
 
Таблица 2.16 – Описание сценария «Исполнение Playbook» 

Действующие лица  Пользователь, терминал ОС, Ansible 
Пользователь: 
Цели 
автоматизирования задачи; 
Терминал ОС: предоставить возможности для работы с ОС; 
Ansible:  исполнение  Playbook  и  информирование  пользователя  о 
процессе исполнения. 

написанный 

исполнить 

Playbook 

для 

Успешный сценарий: 

1.  Вызов сценария «Работа с Playbook» (п. 2.2.4); 
2.  Пользователь,  используя  терминал  и  команды  Ansible  запускает  исполнение 

Playbook; 

3.  Ansible  исполняет  код  Playbook,  а  также  информирует  пользователя  о  прогрессе 

исполнения; 

4.  Ansible заканчивает исполнение Playbook, уведомляет пользователя; 
5.  Пользователь проверяет результаты исполнения Playbook. 

Результат 

Автоматизированная  задача  была  выполнения  при  помощи 
Playbook. Результат удовлетворяет пользователя. 

Таблица  2.17  –  Описание  альтернатив  сценария  «Работа  с  инвентарём 

Ansible» 
Расширения: 
2а 

3а 

5а  

Файл не существует. 
Вызов сценария «Создания Playbook» (п. 2.2.5). 
В процессе исполнения Playbook возникла ошибка. 
Результат: задача не была выполнена или выполнена частично. 
Вызов сценария «Работа с конфигурацией Ansible» (п. 2.2.3). 
Вызов сценария «Изменение Playbook» (п. 2.2.6). 
Вызов сценария «Работа с инвентарём Ansible» (п. 2.2.7). 
Пользователь не удовлетворён результатами исполнения Playbook. 
Результат:  задача  была  выполнена  некорректно  или  частично 
корректно. 
Вызов сценария «Работа с конфигурацией Ansible» (п. 2.2.3). 
Вызов сценария «Изменение Playbook» (п. 2.2.6). 
Вызов сценария «Работа с инвентарём Ansible» (п. 2.2.7). 

2.2.9 Сценарий «Использование инвентаря» 
Инвентарь  –  это  описание  устройств,  с  которыми  работает  система 
автоматизации.  Инвентарь  можно  описывать  множественными  способами. 
Самый основной – это инвентарь Ansible. В нём для конкретного устройства или 
группы можно указать любую информацию, а потом её использовать в задачах 
автоматизации.  Но  для  структурирования  описания  используется  отдельная 
система инвентаризации NetBox, которая хранит информацию об устройствах в 
БД, а также имеет удобный WEB GUI для работы с пользователем и REST API 
для  работы  с  приложениями.  В  зависимости  от  задачи  используется  либо 
инвентарь  Ansible,  либо  инвентарь  NetBox.  Описание  сценария  приведено  в 
таблице 2.18.  

63 

 
 
 
 
Таблица 2.18 – Описание сценария «Использование инвентаря» 

Действующие лица 
Цели 

Успешный сценарий: 

Ansible, инвентарь  
Ansible: получения информации об устройствах из инвентаря; 
Инвентарь: предоставление информации об устройствах. 

1.  Ansible запрашивает необходимую ему информации при работе с Playbook; 
2.  Инвентарь предоставляет всё запрашиваемую информацию Ansible. 

Результат 

Ansible получил информации об устройствах из инвентаря. 

2.2.10 Сценарий «Авторизация в NetBox» 
Авторизация  в ПО  NetBox необходимо  для  просмотра и  редактирования 
информации,  которое  храниться  в  нём.  Так  как  система  выполняет  функции 
инвентаризации сетевых устройств и документирование сети, то доступна она, 
не  только  пользователем  системы  автоматизации,  а  всему  сетевому  отделу. 
Помимо пользователей в виде людей, которым предоставлен доступ к  NetBox. 
Также подразумевается различное ПО, которое работает с NetBox не через сайт, 
а  через  REST  API.  Описание  сценария  приведено  в  таблице  2.19.  Описание 
альтернатив сценария – в таблице 2.20. 

Таблица 2.19 – Описание сценария «Авторизация в NetBox» 

Действующие лица  Пользователь, NetBox 
Цели 
Успешный сценарий: 

Пользователь: авторизоваться в NetBox. 

1.  Получение доступа к NetBox; 
2.  Предоставление данных авторизации; 
3.  NetBox проверяет данные авторизации; 
4.  NetBox предоставляет доступ. 

Результат 

Пользователь авторизовался в NetBox. 

Таблица 2.20 – Описание альтернатив сценария «Авторизация в NetBox» 

Расширения: 
1а 

5а 

NetBox недоступен. 
Результат: пользователь не может получить доступ к NetBox. 
Данные не прошли проверку. 
NetBox отклоняет запрос. 
Результат: отказ в авторизации. 
Переход на шаг 1. 

2.2.11 Сценарий «Работа с информацией в NetBox» 
Получив  доступ  к  NetBox,  пользователь  может  просматривать  или 
изменять информацию, которая в нём храниться при наличии соответствующих 
прав. Так же, как и при авторизации под пользователем может подразумеваться 
и  другое  ПО.  К  примеру,  Ansible  при  исполнении  Playbook.  Все  действия, 
проводимые  с  информацией  NetBox,  документируются  в  виде  логов  ПО. 
Описание сценария приведено в таблице 2.21. Описание альтернатив сценария – 
в таблице 2.22. 

64 

 
 
 
 
 
Таблица 2.21 – Описание сценария «Работа с информацией в NetBox» 

Действующие лица 
Цели 
Успешный сценарий: 

Пользователь, NetBox 
Пользователь: поработать с информацией в NetBox. 

1.  Вызов сценария «Авторизация в NetBox» (п. 2.2.10); 
2.  Пользователь работает с информацией; 
3.  NetBox документирует действия пользователя. 

Результат 

Пользователь поработал с информацией в NetBox. 

Таблица 2.22 – Описание альтернатив сценария «Работа с информацией в 

NetBox» 
Расширения: 
2а 

У пользователя недостаточно прав для изменения информации. 
Результат: пользователь не внес изменения в NetBox. 

2.2.12 Сценарий «Использование модуля NetBox Inventory» 
задач 
Чтобы  использовать  систему  NetBox  как  инвентарь  для 
автоматизации  Ansible,  существует  модуль  NetBox  Inventory  [20],  который 
упрощает  взаимодействие  Ansible  и  NetBox  REST  API.  Для  авторизации 
используется  специальный  токен  NetBox.  Чтобы  указать  Ansible,  что 
использовать 
то  нужно  прописать 
соответствующие  параметры  в  конфигурации  Ansible.  Описание  сценария  в 
таблице 2.23. 

качестве  инвентаря  NetBox, 

в 

Таблица 2.23 – Описание сценария «Работа с информацией в NetBox» 

Действующие лица  Пользователь, NetBox 
Цели 

Пользователь:  начать  использовать  NetBox  в  качестве  инвентаря 
Ansible. 

Успешный сценарий: 

1.  Вызов сценария «Авторизация в NetBox» (п. 2.2.10); 
2.  Пользователь копирует значение токена NetBox; 
3.  Вызов сценария «Работа с конфигурацией Ansible» (п. 2.2.3). 

Результат 

Пользователь  начал  использовать  NetBox  в  качестве  инвентаря 
Ansible. 

2.3 Разработка программ автоматизации  
В данном разделе приводится описание программ автоматизации, которые 
должны  решать  основные  рутинные  задачи,  возникающие  в  сетевом  отделе 
компании EN+ DIGITAL. 

2.3.1 Программы автоматизации конфигурирования 
Основными задачами по конфигурированию сетевых устройств считается 
настройка  интерфейсов  и  подсетей,  маршрутизация,  списки  доступа,  VPN-
туннели и NAT. Поэтому было решено для  прототипа системы  автоматизации 
сконцентрироваться на автоматизации этих задач. 

2.3.1.1 Автоматизация настройки интерфейсов и подсетей 
Чтобы  настроить  сетевую  инфраструктуру, 

требуется  настроить 
интерфейсы  устройства  и  подсети  пользователей.  Для  разделения  трафика 

65 

 
 
 
используется тегирование. Этой задачей занимается технология VLAN [21]. Для 
демонстрационных  целей  будет  достаточно  разделить  трафик  на  трафик 
пользователей  и  трафик  управления  сетевыми  устройствами.  С  описанием 
программы автоматизации можно ознакомиться в таблице 2.24 

Таблица  2.24  –  Описание  программы  автоматизации  настройки 

интерфейсов и подсетей. 
Название программы  
Цель 

Результат 

Алгоритм 

Требования 

интерфейсы 

VLAN_users_maintenance.yml 
Настроить 
пользовательского трафика и трафика управления. 
Интерфейсы 
сконфигурированы 
тегируется при помощи технологии VLAN.  

устройства 

и 

и 

подсети 

для 

работают.  Трафик 

1)  собрать информацию об интерфейсах на устройствах; 
2)  сконфигурировать и поднять физические интерфейсы; 
3)  сконфигурировать VLAN-интерфейсы; 
4)  связать VLAN и физические интерфейсы; 
5)  проверить конфигурацию устройств. 
Устройство подготовлено к работе с системой; 
Описать IP-пространство в файлах переменных; 
Описать интерфейсы устройства в файлах переменных. 

2.3.1.2 Автоматизация настройки маршрутизации 
Маршрутизация позволяет устройствам отправлять пакеты по сети. Если 
устройство  имеет  маршрут  до  определенного  адресата,  тогда  можно  передать 
ему  информацию.  Протоколы  динамической  автоматизации,  позволяют 
упростить  настройку  маршрутизации.  Для  демонстрации  возможности 
автоматизации  конфигурирования  маршрутизации  был  выбран  один  из  самых 
популярных  протоколов  –  OSPF  [22].  С  описанием  программы  автоматизации 
можно ознакомиться в таблице 2.25 

66 

 
 
 
 
Таблица 2.25 – Описание программы автоматизации настройки OSPF. 

Название программы  
Цель 

Результат 

Алгоритм 

OSPF_office_main_routers.yml 
Настроить  протокол  OSPF  на  главных  маршрутизаторах 
офисов. 
Настройки OSPF добавлены в конфигурацию устройств, между 
офисами установлены маршруты для передачи пакетов. 

1)  собрать  информацию  об  интерфейсах  и  подсетях  на 

устройствах; 

2)  запустить протокол OSPF на устройствах; 
3)  указать router-id для протокола OSPF на устройствах; 
4)  добавить 

интерфейсы 

подсети 

и 

в 

таблицы 

Требования 

маршрутизации OSPF; 

5)  дождаться  момента,  когда  устройства  обременяются 

таблицами маршрутизации; 

6)  проверить доступность сетей из других офисов. 

Устройство подготовлено к работе с системой; 
Описать IP-пространство в файлах переменных; 
Описать интерфейсы устройства в файлах переменных; 
Устройства должны иметь физическое подключение; 
Описать переменные для OSPF в файлах переменных. 

2.3.1.3 Автоматизация настроек списков доступа 
ACL  –  access  control  lists,  это  инструмент  позволяющий  разрешать  или 
запрещать определенный трафик в определенное направление сети с устройства. 
Другими словами – это фильтр, который регулирует движения трафика [23]. С 
описанием программы автоматизации по настройке ACL можно ознакомиться в 
таблице 2.26 

Таблица 2.27 – Описание программы автоматизации настройки ACL. 

Название программы  
Цель 

Результат 

Алгоритм 

Требования 

ACL_office.yml 
Настроить списки доступа, чтобы трафик пользователей не мог 
идти в подсети, где устройств пользователей нет. 
ACL настроены, и пользователи не могут отправить трафик в 
определенные участки сети. 

1)  собрать  информацию  об  интерфейсах  и  подсетях  на 

устройствах; 

2)  создать ACL; 
3)  связать ACL и интерфейс; 
4)  проверить  недоступность  участка  сети  со  стороны 

пользователя. 
Устройство подготовлено к работе с системой; 
На  устройствах  должны  быть  настроены  интерфейсы  и 
подсети; 
На устройстве должна быть настроена маршрутизация; 
Описать IP-пространство в файлах переменных; 
Описать интерфейсы устройства в файлах переменных. 

67 

 
 
 
 
2.3.1.4 Автоматизация настройки VPN-туннелей 
VPN-туннели  –  это  средство  для  защиты  трафика  через  потенциально 
опасный участок сети [24]. Для демонстрации был выбран популярный протокол 
VPN-туннелей  IKEv2  [25].  С  описанием  программы  автоматизации  можно 
ознакомиться в таблице 2.28. 

Таблица  2.28  –  Описание  программы  автоматизации  настройки  VPN-

туннелей. 
Название программы  
Цель 

Результат 

Алгоритм 

Требования 

IKEv2_office_main_routers.yml 
Настроить  VPN-туннели  между  главными  маршрутизаторами 
офисов. 
VPN-туннели 
шифруется. 

сконфигурированы  и  работают.  Трафик 

1)  собрать  информацию  об  интерфейсах  и  подсетях  на 

устройствах; 

2)  настроить IKEv2 profile; 
3)  настроить туннель между устройствами; 
4)  назначить IKEv2 profile на туннель; 
5)  добавить туннель в OSPF; 
6)  проверить работу туннеля и шифрования данных. 

Устройство подготовлено к работе с системой; 
На  устройствах  должны  быть  настроены  интерфейсы  и 
подсети; 
На устройствах должна быть настроена маршрутизация; 
Описать  информацию  необходимую  для  настройки  VPN-
туннеля в файлах переменных; 
Описать переменные для OSPF в файлах переменных; 
Описать IP-пространство в файлах переменных; 
Описать интерфейсы устройства в файлах переменных. 

2.3.1.5 Автоматизация настройки NAT 
NAT  –  это  технология  подмены  IP-адресов.  Используется  для  экономии 
адресного пространства сети Интернет. При попытке выхода в интернет заменяет 
серый адрес на белый и вносит соответствующую запись в таблицу NAT [23]. С 
описанием программы автоматизации можно ознакомиться в таблице 2.29. 

68 

 
 
 
 
Таблица 2.29 – Описание программы автоматизации настройки NAT. 

Название программы  
Цель 
Результат 

Алгоритм 

Требования 

NAT_office_main_routers.yml 
Настроить NAT на главных маршрутизаторах офисов. 
NAT  сконфигурирован.  Адреса  подменяются  при  выходе  в 
сеть. 

1)  создать пул адресов для подмены; 
2)  создать ACL для определения белого адреса; 
3)  связать ACL и пул (создать NAT); 
4)  навесить NAT на интерфейс; 
5)  проверить работу NAT. 

Устройство подготовлено к работе с системой; 
На  устройствах  должны  быть  настроены  интерфейсы  и 
подсети; 
На устройствах должна быть настроена маршрутизация; 
Обозначить IP-пространство в файлах переменных; 
Описать IP-пространство в файлах переменных; 
Описать интерфейсы устройства в файлах переменных. 

2.3.2 Программы автоматизации документирования 
Документирование  сети  важный  элемент  работы  сетевого  инженера.  К 
документации он обращается при решении задач или возникновении неполадок 
на участке сети или устройстве. Поэтому важно чтобы документирование было 
подробным и имело актуальную информацию [26]. 

Документирование  можно  разделить  на  2  этапа:  инвентаризация  и 

добавление устройства в системы мониторинга сети. 

Первый отвечает за документирование информации об устройстве. 
Второе – за документирование его работы в сети. 

2.3.2.1 Инвентаризация устройства 
Для  инвентаризации  устройства  выбрана  система  NetBox  (согласно  п. 
1.4.6).  Инвентаризация  происходит  при  помощи  программ  автоматизации  и 
специального  модуля,  написанного  разработчиками  NetBox.  С  описанием 
программы автоматизации можно ознакомиться в таблице 2.30. 

69 

 
 
 
 
Таблица  2.30  –  Описание  программы  автоматизации  инвентаризации 

устройства. 
Название программы  
Цель 
Результат 
Алгоритм 

Требования 

device_inventory.yml 
Внести информацию об устройстве в систему NetBox. 
Информация внесена в NetBox и доступна для чтения. 

1)  собрать всю информацию об устройстве; 
2)  внести запись об устройстве в NetBox; 
3)  проверить корректность информации. 
Устройство подготовлено к работе с системой; 
Устройство  должно быть настроено для  функционирования в 
сети; 
Указать  данные  для  авторизации  в  NetBox  в  файлах 
переменных; 
Указать дополнительную информацию об устройстве в файлах 
переменных.  Информацию,  которую  невозможно  собрать  с 
устройства. 

2.3.2.2 Добавление устройства в системы мониторинга сети 
В  отделе  на  данный  момент  используется  ПО  Zabbix,  WhatsUp  Gold, 
NetFlow  Analyzer  для  отслеживания  работы  сети.  Поэтому  важно,  чтобы  как 
можно больше устройств было внесено в данное ПО. Это позволит оперативнее 
решать  различные  вопросы  и  неисправности.  С  описанием  программы 
автоматизации можно ознакомиться в таблице 2.31. 

Таблица  2.32  –  Описание  программы  автоматизации  добавление 

устройства в системы мониторинга сети. 
Название программы  
Цель 

device_monitoring.yml 
Внести информацию об устройстве в системы Zabbix, WhatsUp 
Gold, NetFlow Analyzer. 
Информация внесена в Zabbix, WhatsUp Gold, NetFlow Analyzer 
и доступна для чтения. 

1)  собрать  всю  информацию  об  интерфейс  и  адресе 

управления устройства; 

2)  настроить протокол SNMPv3 на устройстве; 
3)  добавить устройство в Zabbix; 
4)  добавить устройство в WhatsUp Gold; 
5)  добавить устройство в NetFlow Analyzer; 
6)  проверить корректность информации. 
Устройство подготовлено к работе с системой; 
Устройство  должно быть настроено для  функционирования в 
сети; 
Указать  данные  для  авторизации  в  системы  в  файлах 
переменных; 
Указать  данные  для  настройки  протокола  SNMPv3  в  файлах 
переменных. 

Результат 

Алгоритм 

Требования 

2.4 Архитектура системы 
В  Таблице  2.33  приводится  состав  программных  средств  системы 

автоматизации.  

70 

 
 
 
Таблица 2.33 – Перечень программных средств системы автоматизации. 

№ 

Наименование 
(рекомендуемая версия) 

Цель использования 

1 

2 

3 
4 
5 
6 

7 

8 

Ubuntu (v22.04) 

Python (3.10.8) 

Ansible (6.5.0) 
NetBox (3.3.5) 
PostgreSQL (14.5) 
Redis (4.0) 

GNS3 (2.2.34) 

7.1  GNS3 VM for VirtualBox 

(2.2.34) 
Oracle VM VirtualBox Manager 
(6.1.38) 

ОС, на которой работает система автоматизации 
[27]. 
язык программирования, необходимый для 
работы NetBox [16] и Ansible [12]. 
ПО автоматизации [12]. 
ПО инвентаризации сети [16].  
СУБД для NetBox. Хранит данные о сети [16]. 
СУБД для NetBox. Хранит информацию об 
операциях в ПО [17]. 
ПО для эмуляции сетевой инфраструктуры [18]. 
образ виртуальной машины GNS3, требуется для 
работы GNS3. Эмулирует работу устройств [18]. 
гипервизор. Для виртуализации ОС и GNS3 VM 
[28]. 

На рисунке 2.13 приводится техническая архитектура системы 

Рисунок 2.13 – Техническая архитектура системы 

71 

 
 
 
 
Инвентарная система позволяет хранить данные об устройствах. 
Система  управления 

IP-пространством  позволяет  контролировать, 
планировать  и  выделять  IP-адреса,  подсети,  VLAN'ы  под  различные  нужды 
компании. 

Система  инициации  устройств  осуществляет  быстрое  внедрение  нового 

устройства в сеть. 

Система мониторинга отслеживает состояние устройств. 
Система  управления  и  доставки  конфигураций  позволяет  работать  с 
конфигурациями устройств (разрабатывать, изменять, удалять) и осуществляет 
доставку  и  установку  конфигураций  на  устройства.  Конфигурация  устройства 
зависит  от  множества  факторов  (особенности  модели,  где  оно  располагается, 
какие задачи должно выполнять). 

Полигон  для  тестирования  –  виртуальная  копия  реальной  сетевой 

инфраструктуры или её части для тестирования новых конфигурация. 

Сетевая  инфраструктура  –  реальная  сетевая  инфраструктура,  которая 

обеспечивает передачу данных группы компаний EN+ GROUP. 

2.5 Развертывание системы 
Развертывание  системы  важный  процесс  внедрения  системы  [29]. 
Используя методологию UML, было описано как следует систему подготовить к 
работе. На рисунке 2.14 представлена диаграмма развертывания системы. 

Рисунок 2.14 – Диаграмма развертывания системы. 

72 

 
 
 
 
Система  должна  быть  расположена  на  компьютере  с  операционной 

системой Ubuntu. В операционной системе должны быть установлены: 

‒ гипервизор Oracle VirtualBox; 
‒ симулятор сети GNS3; 
‒ Ansible; 
‒ NetBox. 
В Oracle VirtualBox должны быть импортированы образы GNS3 VM и ОС 

Ubuntu. 

Виртуальная машина GNS3 нужна для корректной работы GNS3. Без неё 
ПО  работать  не  будет.  На  ней  происходит  процесс  эмулирования  сетевой 
инфраструктуры. В GNS3 должен быть создан файл с проектом, в котором будет 
храниться  вся  информация  о  виртуальных  устройствах  и  связях  между  ними. 
Файл будет иметь расширение формата «название_файла.gns3». 

Образ ОС Ubuntu в гипервизоре необходим для развертывания ПО NetBox 

для тестирования программ автоматизации на виртуальном сетевом полигоне.  

На  ОС  системы  и  образе  в  гипервизоре  должно  быть  установлено  ПО 

необходимое для работы Ansible и NetBox (согласно п. 2.4).  
В Ansible будут присутствовать следующие артефакты: 
‒ playbook, файлы в формате yml; 
‒ файл конфигурации, файл в формате «ansible.cfg»; 
‒ коллекции, 
с 

внешними 
разработчиками) модулями, ролями, плагинами; 

папки 

(написанные 

сторонними 

‒ файлы инвентаризации, файлы в формате yml. 
Для NetBox должна быть создана БД в СУБД PostgreSQL, в которой будет 
храниться  вся  информация  о  сети.  Через  REST  API,  playbook  и  файлы 
конфигурации будут обращаться к БД за информацией. 

73 

3 Реализация  
В данном разделе приводится описание последовательности процессов при 

реализации системы автоматизации на 14.12.2022. 

3.1 Состав и содержание работ по созданию системы 
Все  работы  по  реализации  выполнятся  в  соответствии  с  планом  работ, 
представленным  в  таблице  3.1.  Каждый  из  этапов  работ  имеет  описание 
содержания работы, результаты и сроки. 

Таблица 3.1 – Состав и содержание работ по созданию системы 

Сроки 
выполнения 
работ 

начало: 
01.09.2022 

окончание: 
15.09.2022 

начало: 
16.09.2022 

окончание: 
01.10.2022 

начало: 
02.10.2022 

окончание: 
15.10.2022 

№  Наименование 

работ 

Основное содержание 
работ 

Результаты 
выполнения работ 

на 
в 

БП 
момент 

‒ описание 
текущий 
компании; 
‒ требования к системе; 
‒ цель работы; 
‒ задача работы. 

сфере 

сетевым 

‒ знание 
о 
автоматизации 
управления 
оборудованием; 
‒ список 
решений; 
‒ анализ 
решений; 
‒ сравнение 
готовых 
решений  по  различным 
критерия. 

готовых 

готовых 

выбора 

‒ выбранное решение; 
‒ обоснование 
решения; 
‒ детализированный 
анализ 
решения. 

выбранного 

и 

2  Анализ 

1  Постановка 
задачи 

‒ анализ БП в компании; 
‒ описание  проблемы  в 
БП; 
‒ составление 
требований; 
‒ постановка задачи; 
‒ составление 
отчетности 
документации. 
‒ изучение 
автоматизации 
управления 
оборудованием; 
‒ поиск 
решения; 
‒ сравнение решений; 
‒ подведение 
результатов сравнения; 
‒ составление 
отчетности 
документации. 
3  Выбор решения  ‒ обоснование 

предметной 
области 
инструментария 
автоматизации 
управления 
сетевым 
оборудованием 

готового 

сетевым 

сферы 

и 

изучение 

выбранного решения; 
‒ детальное 
решения; 
‒ описание 
предлагаемого решения; 
составление  отчетности 
и документации. 

74 

 
 
 
 
 
Продолжение таблицы 3.1 

№  Наименование 

работ 

Основное содержание 
работ 

Результаты 
выполнения работ 

Сроки 
выполнения 
работ 

начало: 
16.10.2022 

окончание: 
20.11.2022 

начало: 
21.11.2022 

окончание: 
15.04.2023 

‒ описание  БП  после 
внедрения системы; 
‒ описание  вариантов 
использования 
системы; 
‒ описание  программ 
автоматизации. 

прототип 

‒ рабочий 
системы, 
соответствующий 
требованиям; 
‒ рабочий 
полигон; 
‒ демо  версии  системы 
для 
презентации 
заказчику; 
‒ презентации; 

сетевой 

сдана 
в 

‒ система 
заказчику 
эксплуатацию; 
‒ полная  документация 
системы. 

начало: 
16.04.2023 

окончание: 
30.06.2023 

4  Проектирование 

системы 

5  Разработка 
системы 

6  Сдача  системы 

заказчику 

сетевого 

‒ составление  БП  при 
использовании системы; 
‒ составление  вариантов 
использования системы; 
‒ составление 
описания 
программ автоматизации; 
‒ составление  отчетности 
и документации. 
‒ установка  и  настройка 
ПО; 
‒ создание 
полигона; 
‒ подготовка  устройств  к 
работе с системой; 
‒ создание инвентаря; 
‒ создание 
автоматизации; 
‒ отладка 
автоматизации; 
‒ составление  отчетности 
и документации; 
‒ подготовка  демо  версий 
для 
презентации 
заказчику; 
‒ подготовка презентаций; 
‒ презентация  наработок 
заказчику. 
‒ подготовка  системы  для 
внедрения 
сеть 
заказчика; 
‒ подготовка 
документации системы; 
‒ поддержка системы. 

программ 

программ 

полной 

в 

75 

 
 
 
 
 
3.2 Фактически выполненные работы и полученные результаты 
В таблице 3.2 представлена информации о фактическом выполнении работ 
и в таблице 3.3 представлена информации о фактически полученных результатах. 
Данные представлены на 14.12.2022.  

Таблица 3.2 – Фактическое выполнение работ на 14.12.2022 

Не выполнено 
Все планируемые работы завершены. 

Все планируемые работы завершены. 

Все планируемые работы завершены. 

Все планируемые работы завершены. 

и 

демо 

версий 

отчетности 

‒ создание программ автоматизации; 
‒ отладка программ автоматизации; 
‒ составление 
документации; 
‒ подготовка 
презентации заказчику; 
‒ подготовка презентаций; 
‒ презентация наработок заказчику. 
‒ подготовка системы для внедрения в 
сеть заказчика; 
‒ подготовка  полной  документации 
системы; 
поддержка системы. 

для 

Этап 
1 

2 

3 

4 

5 

Выполнено 

и 

отчетности 

автоматизации 

‒ анализ БП в компании; 
‒ описание проблемы в БП; 
‒ составление требований; 
‒ постановка задачи; 
‒ составление 
документации. 
‒ изучение 
сферы 
управления сетевым оборудованием; 
‒ поиск готового решения; 
‒ сравнение решений; 
‒ подведение результатов сравнения; 
составление отчетности и документации. 
‒ обоснование выбранного решения; 
‒ детальное изучение решения; 
‒ описание предлагаемого решения; 
составление отчетности и документации. 
‒ составление  БП  при  использовании 
системы; 
‒ составление  вариантов  использования 
системы; 
‒ составление 
автоматизации; 
составление отчетности и документации. 
‒ установка и настройка ПО; 
‒ создание сетевого полигона; 
‒ подготовка  устройств  к  работе  с 
системой; 
‒ создание инвентаря; 

программ 

описания 

6 

Работы ещё не начаты 

76 

 
 
 
Этап 
1 

Таблица 3.3 – Фактически полученные результаты на 14.12.2022 
Не получено 
Все  планируемые  результаты 
получены. 

Получено 
‒ описание БП на текущий момент в компании; 
‒ требования к системе; 
‒ цель работы; 
‒ задача работы. 

2 

3 

4 

5 

6 

‒ знание  о  сфере  автоматизации  управления 
сетевым оборудованием; 
‒ список готовых решений; 
‒ анализ готовых решений; 
сравнение  готовых  решений  по  различным 
критерия. 
‒ выбранное решение; 
‒ обоснование выбора решения; 
детализированный 
решения. 
‒ описание БП после внедрения системы; 
‒ описание вариантов использования системы; 
описание программ автоматизации. 
‒ первая 
презентации заказчику; 
‒ первая презентация. 

выбранного 

системы 

версия 

анализ 

демо 

для 

‒ система сдана заказчику в эксплуатацию; 
полная документация системы. 

Все  планируемые  результаты 
получены. 

Все  планируемые 
получены. 

результаты 

Все  планируемые  результаты 
получены. 

системы, 

‒ рабочий  прототип 
соответствующий требованиям; 
‒ рабочий сетевой полигон; 
‒ вторая демо версия системы для 
презентации заказчику; 
‒ вторая презентация. 
‒ система  сдана 
эксплуатацию; 
‒ полная документация системы. 

заказчику  в 

3.3 Примеры наработки системы 
В  данном  разделе  представлены  некоторые  наработки  системы, 

полученные на 14.12.2023. 

3.3.1 Структура файлов Ansible 
На  рисунке  3.1  представлена  структура  файлов  Ansible.  Файлы 

отображены белым, а папки желтым. 

77 

 
 
 
Рисунок 3.1 – Структура файлов Ansible. 

78 

 
 
 
group_vars.  Папка  хранит  переменные  для  групп  устройств.  Файл  cisco-
routers.yml  хранит  переменные  для  всех  маршрутизаторов  cisco.  Файл 
vpn_routers.yml  хранит  переменные  для  всех  маршрутизаторов,  которые 
выполняют функцию шифрования данных посредством туннелей. 

collections.  Папка  с  коллекциями.  На  данный  момент  пуста,  из-за 

отсутствия необходимости в использовании коллекций. 

host_vars. Папка хранит переменные для конкретного устройства. Файлы 
brk-cisco-rt-01.yml,  irk-cisco-rt-01.yml,  msk-cisco-rt-01.yml  хранят  переменные 
для  главных  маршрутизаторов  различных  офисов.  Файл  netbox.yml  хранит 
информацию о подключении к системе netbox. 

logs.  Папка,  хранящая  лог-файлы  ПО  Ansible.  Файл  ansible-logs  хранит 

информацию о действиях при работе с ПО Ansible. 

playbooks.  Папка,  хранящая  playbook 

(программы  автоматизации). 

Структура данной папки, следующая: 
1.  Папка configuring. Хранит playbook для задач конфигурации устройств: 

1.1. Папка  vpn.  Хранит  playbook  для  конфигурирования  vpn-туннелей  на 
устройствах. На данный момент конфигурируется только протокол IKEv2: 
1.1.1.  ikev2.yml. Программа автоматизации настройки протокола IKEv2; 
1.1.2.  ikev2_tunnels.yml. Программа автоматизации создания туннелей для 

протокола IKEv2; 

1.1.3.  ospf_fix.yml.  Программа 
изменения в протокол OSPF; 

автоматизации,  которая  добавляет 

1.2. Папка routing. Хранит playbook для конфигурирования маршрутизации на 
устройствах. На данный момент конфигурируется только протокол OSPF: 
1.2.1.  Файл ospf.yml. Программа автоматизации для настройки протокола 

OSPF на устройствах; 

2.  Папка documenting. Хранит playbook для задач документирования устройств: 
2.1. Папка  devices.  Хранит  playbook  для  документирования  информации, 

касательно устройства: 
2.1.1.  Файл add_cisco _router.yml. Документирует маршрутизатор  cisco в 

систему NetBox; 

2.1.2.  Файл 

2.1.3.  Файл 

add_device_interface.yml.  Документирует 

интерфейсы 
устройства в NetBox. Работает только при наличии записи устройства; 
add_device_interface_LOOP_interface.yml.  Документирует 
LOOP интерфейсы устройства в NetBox. Работает только при наличии 
записи устройства; 

2.1.4.  Файл  add_device_type.yml.  Документирует  информацию  о  модели 

устройства в NetBox; 

2.1.5.  Файл  add_manufacturers.yml.  Документирует  информацию  о 

производителе устройства; 

2.1.6.  Файл creating_device_roles.yml. Создает роль устройства в NetBox; 
2.2. Папка  ipam.  Хранит  playbook  для  документирования  информации, 

касательно сетевого пространства: 
2.2.1.  Файл add_ip_range.yml. Документирует диапазон адресов в NetBox; 
2.3. Папка organization. Хранит playbook для документирования информации 

касательно организации: 

79 

2.3.1.  Файл creating_sites.yml. Документирует офисы в NetBox; 

2.4. Папка  Others.  Хранит  playbook,  которые  ещё  не  были  вынесены  в 

отдельную категорию: 
2.4.1.  Файл collecting_facts_test.yml. Собирает информацию с устройства 

и предоставляет пользователю в сыром виде (в терминале); 

2.4.2.  Файл  collecting_hardware_facts.yml.  Собирает  только  техническую 
информацию с устройства и предоставляет пользователю в сыром виде 
(в терминале). 

netbox_inventory.yml.  Файл,  описывающий  использование  NetBox  как 

инвентаря Ansible. 

ansible.cfg. Конфигурационный файл Ansible. 

3.3.2 Результаты документирования устройств 
В 

приводятся 

разделе 

данном 

результаты, 

полученные 

при 

автоматизировании документирования устройства в систему NetBox. 

На рисунке 3.2 представлены задокументированные маршрутизаторы cisco. 

Рисунок 3.2 – Записи о маршрутизаторах в NetBox. 

80 

 
 
 
 
 
 
На рисунке 3.3 представлена информация о задокументированных офисах 

в систему NetBox. 

Рисунок 3.3 – Записи об офисах в NetBox. 

На рисунке 3.4 представлена информация о задокументированных ролях 

устройств в систему NetBox. 

Рисунок 3.4 – Записи о ролях устройств в NetBox. 

81 

 
 
 
 
 
 
 
3.4 Анализ выполненной работы и дальнейшие планы 
На данный момент можно считать, что разработка системы идёт успешно, 
согласно плану работ. Текущий этап работ – пятый, посвящен непосредственной 
реализации  системы  и  автоматизации.  Полученные  на  текущий  момент 
результаты  были  представлены  заказчику.  Представитель  сетевого  отдела  для 
разработки  данной  системы  оказался  доволен  результатом,  ожидает 
дальнейшего прогресса разработки и последующих результатов.  

Следующее представление работы заказчику состоится в марте 2023 года. 
К этому момент планируется расширить возможности автоматизации при работе 
с сетевым оборудованием. Также в планах: 

‒ расширить  разнообразие  оборудование,  работу  с  которым  можно 

автоматизировать; 

‒ доработать документирование устройства; 
‒ начать работу над написанием руководства пользования системой; 
‒ плотное сотрудничество с представителем компании, для автоматизации 

наиболее правдоподобных задач при работе с сетевым оборудованием. 

82 

 
Заключение 

Во 

время 

прохождения 

были 
проанализированы  бизнес-процессы  сетевого  отдела  компании  EN+  DIGITAL. 
Рутинность  задач  конфигурирование  и  документирование  привела  к  идее  об 
автоматизации  этих  процессов  посредством  внедрения  автоматизированной 
системы.  

производственной 

практики 

Перед проектированием системы были проведены следующие операции: 
‒ смоделированы бизнес-процессы при работе с сетевым оборудованием; 
‒ составлены цель и назначение системы; 
‒ составлены требования. 
Изучение предметной области, посвященной автоматизации управления и 
работы с сетевым оборудованием, дало не только знания об области, но и список 
готовых решений. 

Готовые  решения  были  изучены.  Были  выявлены  их  слабые  и  сильные 
стороны, которые позволили выполнить общий сравнительный анализ. Итогом 
сравнительного анализа стало выбранное решение в виде ПО Ansible и NetBox. 
Данное ПО не только соответствует всем требованиям, но и имеет подробную 
документацию, а также является доступным. 

После 

того  как  решение  было  утверждено,  начался  процесс 

проектирования системы, а именно: 

‒ моделирование бизнес-процессов при работе с сетевым оборудованием 

после внедрения системы; 

‒ составлены варианты использования системы; 
‒ описаны основные программы автоматизации. 
Когда  проектирование  было  завершено  начался  процесс  реализации 

прототипа системы: 

‒ установка и настройка необходимого ПО; 
‒ подготовка сетевого полигона и устройств; 
‒ работа с автоматизацией задач документирования и конфигурирования. 
Реализация  системы  ещё  далека  от  завершения,  но  даже  сейчас  может 
показывать  достойные  результаты.  Там,  где  раньше  сетевой  инженер  мог 
потратить 4 часа на настройку VPN-туннелей, работа с системой сокращает это 
время  до  0.5-1  часа.  Большая  часть  времени  при  работе  с  системой  уходи  на 
написание программ автоматизации и объявление переменных.  

Когда работа над системой будет закончена, начнется процесс составления 

полной документации, внедрение системы и последующая поддержка.  

83 

 
Список использованных источников 

1.  Мария Панасюгина. 2009 VS 2019: КАКИМ БЫЛ ИНТЕРНЕТ 10 ЛЕТ 
НАЗАД  [Электронный  ресурс].  URL:  https://morsmagazine.ru/events/fotograf-
inzhener-v-sfere-it-i-zhurnalisty-rasskazyvayut-kakim-byl-internet-10-let-nazad/ 
(Дата обращения 03.10.2022). 

2.  АДСМ5. История сетевой автоматизации [Электронный ресурс]. URL: 

https://habr.com/ru/post/667012/#NOW (Дата обращения 10.10.2022). 

3.  О.А.  Бияков  Графические  нотации  в  стандарте  IDEF0  [Электронный 

ресурс]. URL: https://studfile.net/preview/416831/ (Дата обращения 17.11.2022) 

4.  Универсальная система мониторинга Zabbix – введение [Электронный 

ресурс]. URL: https://habr.com/ru/post/73338/ (Дата обращения 20.11.2022) 
Gold 

[Электронный 
https://www.whatsupgold.com/ (Дата обращения 20.11.2022). 

5.   Progress  WhatsUp 

ресурс]. 

URL: 

6.   ManageEngine  NetFlow  Analyzer 

[Электронный  ресурс].  URL: 

https://www.manageengine.ru/netflow/ (Дата обращения 20.11.2022). 

7.  David  Taylor.  Best  8  Ansible  Alternatives  &  equivalent  in  2023 
[Электронный  ресурс].  URL:  https://www.guru99.com/ansible-alternative.html 
(Дата обращения 17.11.2022). 
8.  Альтернативы 

Ansible 
https://progsoft.net/ru/software/ansible (Дата обращения 17.11.2022). 

[Электронный 

ресурс]. 

URL: 

9.  The  41  Best  Network  Automation  Tools  in  2021  [Электронный  ресурс]. 
URL:  https://www.imedita.com/blog/network-automation-tools/  (Дата  обращения 
18.11.2022). 

10. Welcome  to  NAPALM’s  documentation!  [Электронный  ресурс].  URL: 

https://napalm.readthedocs.io/en/latest/ (Дата обращения 15.10.2022). 

netmiko 

11. Модуль 

ресурс]. 
https://pyneng.readthedocs.io/ru/latest/book/18_ssh_telnet/netmiko.html 
обращения 16.10.2022). 
12. Ansible 

Documentation 

[Электронный 

[Электронный 

ресурс]. 

URL: 
(Дата 

URL: 

https://docs.ansible.com/ansible/latest/index.html (Дата обращения 20.10.2022). 

13. Tonya  Brown.  An  introduction to Ansible  Tower  [Электронный  ресурс]. 
(Дата  обращения 

URL:  https://www.redhat.com/sysadmin/intro-ansible-tower 
23.10.2022). 

14.  NetYce Full Stack Network Automation Platform [Электронный ресурс]. 
https://www.tucana.com/products/netyce-full-stack-network-automation-

URL: 
platform/ (Дата обращения 27.10.2022). 

15.  Ansible-Galaxy  [Электронный ресурс]. URL: https://galaxy.ansible.com/ 

(Дата обращения 01.11.2022). 

16.  NetBox 

ресурс]. 
https://netbox.arbormesh.com/static/docs/ (Дата обращения 05.11.2022). 

[Электронный 

documentation 

URL: 

17.  Django-стек:  работа,  установка  и  настройка  на  одном  сервере 
(Дата 

[Электронный  ресурс].  URL:  https://1cloud.ru/blog/django_one_server 
обращения 11.11.2022). 
18.  Getting 

Started  with  GNS3 

ресурс].  URL: 

[Электронный 

https://docs.gns3.com/docs/ (Дата обращения 13.11.2022). 

84 

19. Использование  диаграммы  вариантов  использования  UML  при 
проектировании  программного  обеспечения  [Электронный  ресурс].  URL: 
https://habr.com/ru/post/566218/ (Дата обращения 01.12.2022). 
inventory  –  NetBox 

source 
[Электронный 
URL: 
https://docs.ansible.com/ansible/latest/collections/netbox/netbox/nb_inventory_invent
ory.html (Дата обращения 05.12.2022). 

20. netbox.netbox.nb_inventory 

inventory 

ресурс]. 

21. Основы  компьютерных  сетей.  Тема  №6.  Понятие  VLAN,  Trunk  и 
URL: 

протоколы 
https://habr.com/ru/post/319080/ (Дата обращения 05.12.2022). 

[Электронный 

ресурс]. 

DTP 

VTP 

и 

22. Руслан  Маммадов.  OSPF  (часть  первая)  [Электронный  ресурс].  URL: 

https://habr.com/ru/post/418391/ (Дата обращения 05.12.2022). 

23. Сети  для  самых  маленьких.  Часть  пятая.  ACL  и  NAT  [Электронный 

ресурс]. URL: https://habr.com/ru/post/147996/ (Дата обращения 05.12.2022). 

24. VPN:  ещё  раз  просто  о  сложном  [Электронный  ресурс].  URL: 

https://habr.com/ru/post/534250/ (Дата обращения 05.12.2022). 

25. IKEv2  и  Flex VPN средствами  Cisco  IOS.  Синтаксис и  логика  работы 
[Электронный  ресурс].  URL:  https://habr.com/ru/post/186126/  (Дата  обращения 
05.12.2022). 

26. Как  взять  сетевую  инфраструктуру  под  свой  контроль.  Глава  вторая. 
URL: 

Чистка 
https://habr.com/ru/post/434750/ (Дата обращения 07.12.2022). 

документирование. 

[Электронный 

ресурс]. 

и 

27. Why  no  Ansible  controller  for  Windows?  [Электронный  ресурс].  URL: 
http://blog.rolpdog.com/2020/03/why-no-ansible-controller-for-windows.html  (Дата 
обращения 10.12.2022). 
28. Oracle 
VM 

[Электронный 

VirtualBox 

ресурс]. 

URL: 

https://www.oracle.com/virtualization/virtualbox/ (Дата обращения 08.12.2022). 

29. UML  Deployment  Diagrams 

[Электронный 

ресурс].  URL: 
обращения 

(Дата 

https://www.uml-diagrams.org/deployment-diagrams.html 
09.12.2022). 

85 

